{"task_id": "HumanEval/0", "completion": "    # sort list by elements from highest to lowest\n    numbers = sorted(numbers, reverse=True)\n    # check if there are two consecutive numbers close each other\n    for i in range(1, len(numbers)):\n        if abs(numbers[i] - numbers[i-1]) <= threshold:\n            return True\n    return False\n", "result": "passed", "passed": true}
{"task_id": "HumanEval/1", "completion": "def has_close_elements(numbers: List[float], threshold: float) -> bool:\n    \"\"\" Check if in given list of numbers, are any two numbers closer to each other than\n    given threshold.\n    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)\n    False\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n    True\n    # sort list by elements from highest to lowest\n    numbers = sorted(numbers, reverse=True)\n    # check if there are two consecutive numbers close each other\n    for i in range(1, len(numbers)):\n        if abs(numbers[i] - numbers[i-1]) <= threshold:\n            return True\n    return False\n", "result": "failed: unterminated triple-quoted string literal (detected at line 47) (<string>, line 13)", "passed": false}
{"task_id": "HumanEval/2", "completion": "    # Convert number to int\n    if not number:\n        return 0.0\n    else:\n        number = str(number)\n        int_part, decimals = number[:], number[1:]\n        # Check for negative values\n        if int_part[-1] == '-':\n            number = int_part[:-2] + '-' + int_part[0:4]\n        else:\n            number = str(int_part)\n        return float(number) / 10 ** decimals\n", "result": "failed: unsupported operand type(s) for ** or pow(): 'int' and 'str'", "passed": false}
