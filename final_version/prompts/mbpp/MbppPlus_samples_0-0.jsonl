{"task_id": "Mbpp/2", "prompt": "\"\"\"\nWrite a function to find the shared elements from the given two lists.\nassert set(similar_elements((3, 4, 5, 6),(5, 7, 4, 10))) == set((4, 5))\n\"\"\"\n", "entry_point": "similar_elements", "canonical_solution": "\ndef similar_elements(test_tup1, test_tup2):\n  return tuple(set(test_tup1) & set(test_tup2))\n", "base_input": [[[3, 4, 5, 6], [5, 7, 4, 10]], [[1, 2, 3, 4], [5, 4, 3, 7]], [[11, 12, 14, 13], [17, 15, 14, 13]]], "atol": 0, "plus_input": [[[], []], [[1, 2, 3], []], [[], [4, 5, 6]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]], [[1, 2, 2, 3, 3, 4, 4, 5, 5], [5, 5, 6, 6, 7, 7, 8, 8, 9, 9]], [[100, 200, 300, 400, 500], [100, 200, 400, 500]], [[10, 20, 30, 40, 50], [50, 60, 70, 80]], [[1, 2, 3, 4, 4, 5, 5], [4, 5, 6]], [[], [true, false, false, false, false, true]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 15]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [11, 12, 13, 14, 15, 16, 17, 19, 20, 15]], [[1, 2, 3, 1], []], [["kx", "DHBNiditD"], [4, 5, 6]], [[1, 2, 2, 70, 3, 4, 4, 5, 5, 4, 3], [5, 5, 6, 6, 7, 7, 8, 8, 9, 9]], [[false, false, false, false, true], [false, false, false, false, false]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[8.514020219858878, -25.802494572247724, 5.873698915603498, 38.044354120134614, 11.222647627029431, 26.914534243589074, 78.41454157921689, -80.88414039955265], ["ceRuVEV", "aAXslGdbD", "DHBNiditD", "fHRtFowQVh", "ITntCqEvPi", "SmJpP", "DHBNiditD", "kx", "x"]], [[false, false, false, false, false], [false, false, false, false, false]], [[], [5, 6]], [[1, 2, 2, 70, 3, 4, 4, 5, 5, 4, 3, 2], [1, 2, 2, 70, 3, 4, 4, 5, 5, 4, 3, 2]], [[1, 2, 3, 4, 5, 6, 12, 7, 8, 9, 0, 10], [1, 3, 4, 5, 6, 7, 8, 9, 0, 10]], [[1, 2, 3, 4, 5, 6, 12, 7, 8, 9, 0, 10, 10], [1, 3, 4, 5, 6, 7, 8, 9, 0, 10]], [[], [true, false, false, false]], [[4, 5, 16, 5], [1, 6, 3, 4, 4, 5, 5]], [["DRwvS", "FdzAtAvnsS", "ITntCqEvPi", "nlUsIhET", "ITntCqEvPi", "x"], [true, false, true, false, true, false, true]], [[1, 2, 20], []], [[11, 12, 13, 14, 15, 16, 17, 19, 20, 15], [11, 12, 13, 14, 15, 16, 17, 19, 20, 15]], [[1, 2, 3, 4, 5, 6, 12, 7, 8, 9, 0, 10, 10], [300, 1, 3, 4, 5, 6, 7, 8, 9, 0, 9]], [[false, false, false, false, false], [false, false, false, false]], [[1, 400, 3, 4, 4, 5, 5], [1, 400, 3, 4, 4, 5, 5, 5]], [[], [6]], [[1, 2, 2, 3, 3, 4, 4, 5, 5], [5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 7]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 2, 10], [1, 2, 3, 4, 5, 6, 7, 8, 60, 10, 1]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 4, 6, 7, 8, 9, 10]], [[1, 2, 2, 3, 3, 4, 4, 5, 5, 3], [5, 5, 6, 6, 7, 7, 8, 8, 9, 9]], [[100, 200, 300, 400, 500, 400, 300], [100, 200, 400, 500]], [["DRwvS", "ITntCqEvPi", "tUqF", "ITntCqEvPi"], [4, 6, 6]], [[5, 2, 3], [1, 2, 3]], [[], [500, -45, 96, 22]], [[1, 2, 2, 70, 3, 4, 4, 5, 69, 5, 4, 3, 2], [1, 2, 2, 70, 3, 4, 4, 5, 69, 5, 4, 3, 2]], [[5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 7], [5, 5, 6, 6, 7, 7, 8, 8, 9, 9]], [[1, 2, 2, 2, 70, 3, 4, 4, 5, 5, 4, 3], [5, 5, 6, 6, 7, 7, 8, 8, 9, 9]], [[1, 2, 2, 3, 3, 4, 4, 5, 5, 3], [1, 2, 2, 3, 3, 4, 4, 5, 5, 3]], [["DRwvS", "ITntCqEvPi", "SmJpP", "tUqF", "ITntCqEvPi"], [4, 6, 6]], [[5, 5, 6, 6, 7, 8, 9, 9], [5, 5, 6, 6, 7, 7, 8, 9, 9]], [[1, 2, 20], [1, 2, 20]], [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10], [11, 12, 13, 14, 15, 16, 17, 19, 20, 15]], [[12, 2, 20], [1, 2, 19]], [[11, 12, 13, 14, 15, 16, 17, 19, 20, 15], [11, 12, 13, 14, 15, 16, 17, 19, 20, 15, 20]], [[12, 2, 21], [12, 2, 20]], [[1, 2, 3, 5, 6, 12, 7, 8, 9, 10, 10], [1, 2, 3, 4, 5, 6, 12, 7, 8, 12, 0, 10, 10]], [[12, 2, 20, 20], [12, 2, 20]], [[6], [6]], [["LsgdJOGUO", "nsDO", "ceRuVEV", "BohovaWqz", "vovSNBB", "BohovaWqz"], [true, false, false]], [["DRwvS", "ITntCqEvPi", "SmJpP", "DRwvS"], ["DRwvS", "ITntCqEvPi", "SmJpP", "tUqF", "ITntCqEvPi"]], [[300, 1, 3, 4, 5, 6, 8, 9, 0, 9], [300, 1, 3, 4, 5, 6, 7, 8, 9, 0, 9]], [[false, true, false, true, false, false, true, false, true], [false, true, false, true, false, false, true, false, true]], [[1, 2, 3, 4, 5, 6, 7, 8, 9], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 15]], [[1, 3, 2, 3], [1, 3, 2, 3]], [[false, false, false, false, false], [false, false, false, false, true, false]], [["kx", "DHBNiditD", "DHBNiditD"], [4, 5, 6]], [[1, 1, 2, 3, 1], []], [[1, 2, 3, 5, 6, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10]], [[1, 2, 3, 4, 5, 6, 7, -45, 8, 9, 2, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 2, 10]], [[26, true, 26.914534243589074, -44], []], [[11, 12, 13, 14, 15, 70, 17, 18, 19, 20, 15], [11, 12, 13, 14, 15, 70, 17, 18, 19, 20, 15]], [[300, 1, 3, 2, 4, 5, 6, 8, 9, 0, 9], [300, 1, 3, 4, 5, 6, 7, 8, 9, 0, 9]], [[100, 201, 300, 400, 500], [100, 200, 300, 400, 500]], [[1, 2, 3, 4, 5, 6, 12, 7, 8, 9, 0, 10, 10], [7, 1, 2, 3, 4, 5, 6, 12, 7, 8, 9, 0, 10, 10]], [[false, true, false, false], [false, false, false, false]], [[7, 1, 2, 3, 4, 4, 6, 12, 7, 8, 9, 0, 10, 10], [7, 1, 2, 3, 4, 5, 6, 12, 7, 8, 9, 0, 10, 10]], [[4, 16, 5], [4, 5, 16, 5]], [[1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 9], [1, 2, 3, 5, 6, 6, 7, 8, 9, 10]], [[11, 12, 13, 14, 15, 16, 17, 19, 20, 15], [11, 12, 13, 4, 15, 16, 17, 19, 20, 15, 20]], [[7, 7], [6]], [[1, 2, 2, 3, 3, 4, 4, 5, 5, 3, 4], [5, 5, 6, 6, 7, 7, 8, 8, 9, 9]], [[100, 200, 300, 400, 500, 400, 300], [499, 200, 400, 500]], [[false, false, false, false, false, false], [false, false, false, false, false, false]], [[], [4, 6, 6]], [[4, 5, 6], [4, 4, 5, 6]], [[12, 2, 20, 20, 2], [12, 2, 20, 20]], [[11, 12, 13, 14, 15, 16, 17, 19, 20, 15, 11], [11, 12, 13, 14, 15, 16, 17, 19, 20, 15]], [[16, 1, 2, 3], [1, 2, 3]], [[1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10], [1, 2, 3, 5, 6, 6, 7, 8, 9, 10]], [[30.445411706111912, 18.10848826924409, 24.97646124690165, -55.873347006206544], [500, -45, 96, 22]], [[12, 2, 20], [12, 2, 20, 20]], [[2, 3], [1, 2, 3]], [[1, 3, 2, 3], [1, 3, 3]], [[12, 20], [12, 18, 20]], [[false, false, false, false, false], [false, true, false, false, false, false]], [[4, 6, 6, 4], [4, 6, 6]], [[1, 1, 2, 3, 4, 5, 6, 7, 8, 9], [11, 15, 12, 13, 14, 15, 16, 17, 18, 19, 20, 16]], [[5, 5, 19, 6, 6, 7, 7, 8, 9, 9], [5, 5, 6, 6, 7, 7, 8, 9, 9]], [[5, 19, 5, 16, 5], [1, 6, 3, 4, 4, 5, 5]], [[-95.16136488545524, 8.514020219858878, -25.802494572247724, 5.873698915603498, 38.044354120134614, 11.222647627029431, 26.914534243589074, 78.41454157921689, -80.88414039955265], ["ceRuVEV", "aAXslGdbD", "DHBNiditD", "fHRtFowQVh", "ITntCqEvPi", "SmJpP", "DHBNiditD", "kx", "x"]], [[100, 200, 300, 400], [100, 200, 300, 400]], [[1, 2, 20, 2], [1, 2, 20]], [[false, false, false, false], [false, true, false, false]], [[1, 2, 3, 4, 4, 6, 7, 8, 9, 10], [1, 2, 3, 4, 4, 6, 7, 8, 9, 10]], [[false, false, false, false], [false, true, false, false, true]], [[1, 400, 3, 4, 4, 5, 5, 5, 3], [1, 400, 3, 4, 12, 4, 5, 5, 5, 3]], [["DRwvS", "ITntCqEvPi", "SmJpP", "tUqF", "kx", "tUqF"], ["DRwvS", "ITntCqEvPi", "SmJpP", "tUqF", "kx", "tUqF"]], [[1, 2, 3, 5, 6, 12, 7, 8, 9, 0, 10], [1, 3, 4, 5, 6, 7, 8, 9, 0, 10]], [["DRwvS", "ITntCqEvPi", "SmJpP", "tUqF", "kx", "SmITntCqEvPiJpP", "tUqF"], ["DRwvS", "ITntCqEvPi", "SmJpP", "tUqF", "kx", "tUqF"]], [[1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]], [[11, 12, 13, 14, 15, 26, 16, 17, 19, 20, 15], [11, 12, 13, 14, 15, 16, 17, 19, 20, 15]], [[5, 19, 5, 16, 5, 5], [5, 19, 5, 6, 5]], [[1, 2, 3, 6, 12, 7, 8, 9, 10, 10], [1, 2, 3, 5, 6, 12, 7, 8, 9, 10, 10]]], "contract": "\n  assert isinstance(test_tup1, tuple), \"invalid inputs\" # $_CONTRACT_$\n  assert isinstance(test_tup2, tuple), \"invalid inputs\" # $_CONTRACT_$\n", "assertion": "\nassert similar_elements((3, 4, 5, 6),(5, 7, 4, 10)) == (4, 5)\nassert similar_elements((1, 2, 3, 4),(5, 4, 3, 7)) == (3, 4)\nassert similar_elements((11, 12, 14, 13),(17, 15, 14, 13)) == (13, 14)\n"}
