import gzip, json, os, sys
from typing import Iterable, Dict

def write_jsonl(filename: str, data: Iterable[Dict], append: bool = False):
    """
    Writes an iterable of dictionaries to a jsonl file.
    """
    if append:
        mode = 'ab'  # Append mode
    else:
        mode = 'wb'  # Write mode
    filename = os.path.expanduser(filename)
    if filename.endswith(".gz"):
        with open(filename, mode) as fp:
            with gzip.GzipFile(fileobj=fp, mode='wb') as gzfp:
                for x in data:
                    gzfp.write((json.dumps(x) + "\n").encode('utf-8'))
    else:
        with open(filename, mode) as fp:
            for x in data:
                fp.write((json.dumps(x) + "\n").encode('utf-8'))

# Setup arguments
model = sys.argv[1]            # Name of the LLM
label = sys.argv[2]            # Label of the prompt
n_shot = sys.argv[3]           # N-shot prompting
output_got_file = sys.argv[4]  # File with output generated by the LLM in string format
language = sys.argv[5]         # Language of the benchmark

with open(output_got_file, 'r') as prompt_file:
    output_got = prompt_file.read()

samples = [
    dict(
        task_id=label.replace("_", "/"),  # Replace underscores with slashes in task_id
        generation=output_got
    ) for _ in range(1)
]

outputs_directory = "benchmarks/codefuse-evaluation/codefuseEval/result"

if not os.path.exists(outputs_directory):
    os.makedirs(outputs_directory)

# Writing samples to a jsonl file
write_jsonl(f"{outputs_directory}/samples_{model}_humaneval_{language}_{n_shot}_shot.jsonl", samples, append=True)
