    def dfs(i, j):
        if i < 0 or j < 0 or i >= len(grid) or j >= len(grid[0]) or grid[i][j] == 0:
            return 0
        grid[i][j] = 0
        ret = 1
        for k in range(4):
            ret += dfs(i+dx[k], j+dy[k])
        return ret

    dx = [0, 0, 1, -1]
    dy = [1, -1, 0, 0]
    n = len(grid)
    m = len(grid[0])
    ans = 0
    while True:
        flag = False
        for i in range(n):
            for j in range(m):
                if grid[i][j] > capacity:
                    d = dfs(i, j)
                    grid[i][j] -= d
                    ans += d
                    flag = True
        if not flag:
            return ans










































































































































































































































































