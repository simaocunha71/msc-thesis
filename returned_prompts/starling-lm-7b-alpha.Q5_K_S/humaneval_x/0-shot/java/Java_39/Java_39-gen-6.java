        List<Integer> fibSeq = new ArrayList<>();
        fibSeq.add(2);
        fibSeq.add(3);
        while (fibSeq.size() < n) {
            int currFib = fibSeq.get(fibSeq.size() - 1) + fibSeq.get(fibSeq.size() - 2);
            if (isPrime(currFib)) {
                fibSeq.add(currFib);
            } else {
                continue A;
            }
        }
        return fibSeq.get(n - 1);
    }

    public boolean isPrime(int n) {
        if (n < 2) {
            return false;
        }
        for (int i = 2; i * i <= n; i++) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }


}






























































































































































































































































































