        Stack<Integer> nums = new Stack<>();
        Stack<Character> ops = new Stack<>();

        for(int i = 0; i < operand.size(); i++) {
            nums.push(operand.get(i));

            while(!ops.isEmpty() && (ops.peek() == '+' || ops.peek() == '-')) {
                char op = ops.pop();
                int b = nums.pop();
                int a = nums.pop();

                if(op == '+') nums.push(a + b);
                else nums.push(a - b);
            }
        }

        while(!ops.isEmpty()) {
            char op = ops.pop();
            int b = nums.pop();
            int a = nums.pop();

            if(op == '*') nums.push(a * b);
            else if(op == '/') nums.push(a / b);
            else nums.push((int)Math.pow(a, b));
        }

        return nums.pop();
    }
}




















































































































































































































































