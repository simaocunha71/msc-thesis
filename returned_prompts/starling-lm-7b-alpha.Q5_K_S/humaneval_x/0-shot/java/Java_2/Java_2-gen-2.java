        if (number < 0) {
            number = -number;
        }

        long multiplier = 1;
        while (number >= 1) {
            number *= 10;
            multiplier *= 10;
        }

        number /= multiplier;

        if (number < 0) {
            number = -number;
        }

        return number;
    }

    /**
    Given a positive floating point number, it can be decomposed into
    an integer part (largest integer smaller than given number) and decimals
    (leftover part always smaller than 1).

    Return the integer part of the number.
    >>> truncateNumber(3.5)
    3
     */
    public long truncateNumberToInteger(double number) {
        return Math.floor(number);
    }
}


















































































































































































































































































































