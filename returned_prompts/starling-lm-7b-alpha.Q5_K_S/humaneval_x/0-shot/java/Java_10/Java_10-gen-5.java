        StringBuilder stringBuilder = new StringBuilder(string);

        // Find the longest palindromic postfix
        int len = string.length();
        for (int i = len - 1; i >= 0; i--) {
            StringBuilder substring = stringBuilder.substring(0, i + 1);
            if (isPalindrome(substring.toString())) {
                break A;
            }
        }

        StringBuilder prefix = stringBuilder.delete(0, stringBuilder.length() - 1);
        StringBuilder result = new StringBuilder();
        result.append(stringBuilder.toString());
        result.append(prefix.reverse().toString());

        return result.toString();
    }
}





























































































































































































































































































































































