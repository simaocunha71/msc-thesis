    if len(str) <= 1 {
        return str
    }
    if IsPalindrome(str) {
        return str
    }

    // Find the longest palindrome suffix.
    suffix := str
    for i := len(str) - 1; i >= 0; i-- {
        if IsPalindrome(str[i : len(str)]) {
            suffix = str[i : len(str)]
            break
        }
    }

    // Find the shortest prefix.
    prefix := str[:len(str)-len(suffix)]
    if len(prefix) == 0 {
        return suffix
    }
    return suffix + string(reverse(prefix))
}

func reverse(s string) string {
    r := []rune(s)
    for i, j := 0, len(r)-1; i < j; i, j = i+1, j-1 {
        r[i], r[j] = r[j], r[i]
    }
    return string(r)
}




































































































































































































































































