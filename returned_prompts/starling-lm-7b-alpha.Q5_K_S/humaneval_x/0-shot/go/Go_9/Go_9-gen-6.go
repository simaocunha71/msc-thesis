    // Initialize the result to an empty slice of integers
    result := make([]int, len(numbers))

    // Initialize the max element to the first element in the sequence
    result[0] = numbers[0]

    // Iterate through the rest of the numbers in the sequence
    for i := 1; i < len(numbers); i++ {

        // If the max element is less than the current element, update the max element
        if result[i-1] < numbers[i] {
            result[i] = result[i-1]
        } else {
            result[i] = numbers[i]
        }
    }

    // Return the resulting slice of rolling max elements
    return result
}

// Test the function with the provided example
test := RollingMax([]int{1, 2, 3, 2, 3, 4, 2})
fmt.Println(test)





































































































































































































































































































