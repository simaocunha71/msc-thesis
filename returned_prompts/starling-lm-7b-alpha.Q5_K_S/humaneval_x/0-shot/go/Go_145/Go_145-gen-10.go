    type p struct {
        val   int
        index int
    }
    m := make(map[int][]p)
    for i, v := range nums {
        s := 0
        for _, c := range strconv.Itoa(v) {
            s += c - '0'
        }
        m[s] = append(m[s], p{v, i})
    }
    for k := range m {
        sort.Slice(m[k], func(i, j int) bool {
            return m[k][i].index < m[k][j].index
        })
    }
    var ret []int
    for _, v := range m {
        ret = append(ret, v...)
    }
    return ret
}








































































































































































































































































































































