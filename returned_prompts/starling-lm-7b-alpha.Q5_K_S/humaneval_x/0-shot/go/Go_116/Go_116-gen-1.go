    type Pair struct {
        val int
        cnt int
    }
    pairs := make([]Pair, len(arr))
    for i, a := range arr {
        pairs[i] = Pair{val: a, cnt: len(fmt.Sprintf("%b", a))}
    }
    sort.Slice(pairs, func(i, j int) bool {
        if pairs[i].cnt == pairs[j].cnt {
            return pairs[i].val < pairs[j].val
        } else {
            return pairs[i].cnt < pairs[j].cnt
        }
    })
    ret := make([]int, len(arr))
    for i, a := range pairs {
        ret[i] = a.val
    }
    return ret











































































































































































































































































































































