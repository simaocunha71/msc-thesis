    # This is a very simple solution, which is to
    # check the number of open and close parentheses
    # in both strings. If the two numbers are equal,
    # or the number of open parentheses in the first
    # string is one less than the number of close
    # parentheses in the second string, we can concatenate
    # the two strings in this order and obtain a good string
    # Otherwise, we can't.
    open_parens_in_first_str = lst[0].count('(')
    close_parens_in_first_str = lst[0].count(')')
    open_parens_in_second_str = lst[1].count('(')
    close_parens_in_second_str = lst[1].count(')')
    if open_parens_in_first_str == close_parens_in_first_str \
            or open_parens_in_first_str + 1 == close_parens_in_second_str:
        return 'Yes'
    else:
        return 'No'

match_parens(['()(', ')'])
match_parens([')', ')'])




































































































































































































































