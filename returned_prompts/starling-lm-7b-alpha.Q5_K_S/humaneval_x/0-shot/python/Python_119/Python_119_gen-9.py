    # You can solve this problem with the following steps:
    # 1. Count the total number of open and close parentheses in the first string
    # 2. Count the total number of open and close parentheses in the second string
    # 3. If the total number of open and close parentheses in the first string are equal,
    #    and the total number of open parentheses in the second string is less than or equal to
    #    the total number of close parentheses in the second string, then you can make a balanced
    #    string with the first and second string. Otherwise, you cannot make a balanced string.
    # 4. Return 'Yes' if you can make a balanced string, and return 'No' otherwise.

    # Here is the Python code that implements the steps above:
    open_count = lst[0].count('(')
    close_count = lst[0].count(')')
    if open_count == close_count:
        open_count2 = lst[1].count('(')
        close_count2 = lst[1].count(')')
        if open_count2 <= close_count2:
            return 'Yes'
    return 'No'




































































































































































































































