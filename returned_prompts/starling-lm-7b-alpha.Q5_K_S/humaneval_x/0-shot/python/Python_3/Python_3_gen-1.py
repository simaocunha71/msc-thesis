    balance = 0
    for operation in operations:
        balance += operation
        if balance < 0:
            return True
    return False























# Code generated by "genterator.py". DO NOT EDIT.
import doctest
from datetime import datetime

def add_tests():
    """
    Adds doctest unit tests to test the function below.
    """
    doctest.register_optionflags(datetime)
    doctest.register_optionflags(list)
    doctest.register_optionflags(str)
    doctest.register_optionflags(bool)
    doctest.register_optionflags(int)
    doctest.register_optionflags(float)
    doctest.register_optionflags(type)
    doctest.register_optionflags(datetime)
    doctest.register_optionflags(list)
    doctest.register_optionflags(str)
    doctest.register_optionflags(bool)
    doctest.register_optionflags(int)
    doctest.register_optionflags(float)
    doctest.register_optionflags(type)
    doctest.register_optionflags(datetime)
    doctest.register_optionflags(list)
    doctest.register_optionflags(str)
    doctest.register_optionflags(bool)
    doctest.register_optionflags(int)
    doctest.register_optionflags(float)
    doctest.register_optionflags(type)
    doctest.register_optionflags(datetime)
    doctest.register_optionflags(list)
    doctest.register_optionflags(str)
    doctest.register_optionflags(bool)
    doctest.register_optionflags(int)
    doctest.register_optionflags(float)
    doctest.register_optionflags(type)
    doctest.register_optionflags(datetime)
    doctest.register_optionflags(list)
    doctest.register_optionflags(str