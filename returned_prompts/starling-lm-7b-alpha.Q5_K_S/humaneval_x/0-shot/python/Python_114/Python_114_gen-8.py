
The problem can be solved by using Kadaneâ€™s Algorithm.

The algorithm is as follows:

1. Initialize min_sum, max_sum to the first element of the array nums.
2. Traverse the array starting from the second element to the end of the array. For each element, update max_sum as max(nums[i], max_sum + nums[i]) and update min_sum as min(min_sum, max_sum).
3. Return min_sum.

Here is the Python code for the solution:

```
class Solution(object):
    # @param {integer[]} nums
    # @return {integer}
    def minSubArraySum(self, nums):
        min_sum, max_sum = nums[0], nums[0]
        for i in xrange(1, len(nums)):
            max_sum = max(nums[i], max_sum + nums[i])
            min_sum = min(min_sum, max_sum)
        return min_sum
```

The time complexity of this algorithm is O(n), and the space complexity is O(1).
















































































































































































































































