
def rounded_avg(n, m):
    if n > m:
        return -1
    else:
        avg = (n + m) / 2
        binary = bin(round(avg))[2:]
        return "0b" + binary

# Test the function
print(rounded_avg(1, 5))  # "0b11"
print(rounded_avg(7, 5))  # -1
print(rounded_avg(10, 20))  # "0b1111"
print(rounded_avg(20, 33))  # "0b11010"


# This function first checks if n is greater than m, if so, it returns -1.
# Otherwise, it calculates the average of n and m and stores it in the variable avg.
# The average is rounded to the nearest integer using the round() function.
# The rounded average is then converted to binary using the bin() function.
# The "0b" prefix is added to the binary representation to indicate that it is in binary format.
# The rounded average in binary format is returned as the result.

# The function is tested using various inputs to verify that it produces the expected output.





























































































































































































































