To solve this problem, you can use the following steps:

1. Convert both input lists to sets to remove duplicate elements. This can be done using the built-in set() function in Python. For example, set(l1) and set(l2) will create sets from the lists l1 and l2, respectively.

2. Use the intersection method to find the common elements between the two sets. The intersection method returns a set containing only the elements that are common to both sets. For example, set(l1) & set(l2).

3. Convert the result back to a list to maintain the original order of elements. This can be done using the list() function in Python. For example, list(set(l1) & set(l2)).

4. Finally, use the sorted() function to sort the common elements in ascending order. This can be done by passing the list of common elements as an argument to the sorted() function. For example, sorted(list(set(l1) & set(l2))).

Here's an example of how you can use the common() function with the provided test cases:

In [2]: common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])
Out[2]: [1, 2, 3, 4, 5, 653]

In [3]: common([5, 3, 2, 8], [3, 2])
Out[3]: [2, 3]

By following these steps, you can implement the common() function to return the sorted unique common elements for two lists.

























































































































