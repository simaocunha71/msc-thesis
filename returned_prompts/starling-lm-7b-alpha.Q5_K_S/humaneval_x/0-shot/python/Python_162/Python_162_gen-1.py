
def string_to_md5(text):
    """
    Given a string 'text', return its md5 hash equivalent string.
    If 'text' is an empty string, return None.

    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'
    """

    if not text:
        return None
    else:
        return hashlib.md5(text.encode()).hexdigest()

Explanation:
In this solution, we use the hashlib library's md5 function to calculate the MD5 hash of the input text. We first check if the text is empty; if it is, we return None, as the MD5 hash of an empty string is undefined. Otherwise, we encode the text using the encode method and calculate the MD5 hash using the hashlib.md5 function. Finally, we convert the hash object to a hexadecimal string using the hexdigest method.

To test the function, we use the doctest module to check if the function returns the expected MD5 hash for the given input 'Hello world'.






















































































































































































































































