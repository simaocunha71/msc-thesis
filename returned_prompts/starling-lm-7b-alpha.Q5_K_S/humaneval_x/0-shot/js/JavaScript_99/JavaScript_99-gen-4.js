const num = parseFloat(value);
let roundUp = Math.ceil(num);
let roundDown = Math.floor(num);

if (num - roundDown < roundUp - num) {
  return roundDown;
} else {
  return roundUp;
}

/*
  The above function first parses the string value to a floating point number using parseFloat().
  It then uses Math.ceil() to round up to the nearest integer and Math.floor() to round down to the nearest integer.
  The function then checks which rounding results in the smallest difference from the original number, and returns the appropriate result.

  Here is a breakdown of the steps:

  Step 1: Parse the string value to a floating point number using parseFloat(). This converts the string to a number that can be used in mathematical operations.
  Step 2: Round up to the nearest integer using Math.ceil(). This rounds the number up to the nearest whole number, away from zero.
  Step 3: Round down to the nearest integer using Math.floor(). This rounds the number down to the nearest whole number, away from zero.
  Step 4: Compare the difference between the original number and the rounded up and rounded down values. The one that is the farthest from zero is the closest integer to the original number, so that is the one that is returned.
  */

*/











































































































































































































