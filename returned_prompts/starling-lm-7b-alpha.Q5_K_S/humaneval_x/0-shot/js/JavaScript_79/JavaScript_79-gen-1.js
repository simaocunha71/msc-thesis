    let binary = '';
    while (decimal > 0) {
        binary = (decimal % 2) + binary;
        decimal = Math.floor(decimal / 2);
    }
    return `db${binary}db`;
};

console.log(decimalToBinary(15)); // "db1111db"
console.log(decimalToBinary(32)); // "db100000db"




/*
In the above code, we are using a while loop to convert the decimal number to binary. Inside the loop, we are finding the remainder of the number divided by 2 using the modulo operator (%). The remainder is either 0 or 1, which is the binary digit. We are concatenating this binary digit with the binary number that we have calculated so far. Then, we are dividing the decimal number by 2 and taking the floor value to get the quotient. We repeat this process until the decimal number becomes 0. Finally, we return the binary number with 'db' at the beginning and end.

To test the function, we are using the console.log() function to print the result of the function for different decimal numbers.
*/














































































































































































































































