To check if a number is prime or not, we can follow this logic:
- We start by assuming the number is prime and then check all numbers from 2 to the square root of the number.
- If we find any number that divides the number without leaving a remainder, then the number is not prime.
- If we don't find any such number, then the number is prime.

In this program, we define a function `isPrime` that takes a number `n` as an argument and returns a boolean value indicating whether `n` is prime or not. We use a for loop to iterate through all numbers from 2 to `n - 1`. If `n` is divisible by any number in this range, we return `false`. Otherwise, we return `true`.

In the `xOrY` function, we use the `isPrime` function to check if the input number `n` is prime. If it is, we return the value of `x`. Otherwise, we return the value of `y`.

Finally, we test the `xOrY` function with two examples and print the results to the console using `console.log`.


































































































