
let sum = 0;

for (let i = 0; i < lst.length; i++) {
  if (lst[i] % 2 === 1 && i % 2 === 0) {
    sum += lst[i];
  }
}

return sum;

};

console.log(solution([5, 8, 7, 1])); // 12
console.log(solution([3, 3, 3, 3, 3])); // 9
console.log(solution([30, 13, 24, 321])); // 0

/*
The problem asks to return the sum of all odd elements that are in even positions in a given array.
To solve this problem, we need to iterate through the array and check if the current element is odd and if the index is even.
If both conditions are true, we add the element to the sum.
Finally, we return the sum.

The time complexity of this solution is O(n), where n is the length of the array, because we only need to iterate through the array once.
The space complexity is O(1), because we only need a single variable to store the sum.
*/



































































































































































































































