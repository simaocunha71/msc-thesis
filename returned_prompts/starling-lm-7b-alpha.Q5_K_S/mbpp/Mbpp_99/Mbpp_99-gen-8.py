"""
Here's a Python function that converts a decimal number to its binary equivalent:

def decimal_to_binary(n):
    if n == 0:
        return '0'
    binary_str = ""
    while n > 0:
        binary_str = str(n % 2) + binary_str
        n //= 2
    return binary_str

For example, decimal_to_binary(8) returns '1000', because 8 divided by 2 is 4, and 4 divided by 2 is 2, and 2 divided by 2 is 1. So the binary representation of 8 is '1000'.

Note that the function returns a string, not an integer, and it does not include any leading zeros.

"""

def decimal_to_binary(n):
    if n == 0:
        return '0'
    binary_str = ""
    while n > 0:
        binary_str = str(n % 2) + binary_str
        n //= 2
    return binary_str

# Testing the function
assert decimal_to_binary(8) == '1000'
print("All tests passed.")



































































































































































































































