```
def max_of_nth(matrix, n):
    nth_column = [row[n] for row in matrix]
    return max(nth_column)
```

Explanation:
To solve this problem, we can define a function `max_of_nth` that takes in a matrix (a list of lists) and a column index `n` as parameters. 
Inside the function, we create a new list `nth_column` using a list comprehension. This list comprehension iterates over each row in the matrix, and selects only the element at index `n` from each row. 
Finally, we use the built-in `max` function to find the maximum value in the `nth_column` list, and return it as the result. 

To test this function, we can use the `assert` keyword to check if the function returns the expected result for a given example. In this case, we assert that `max_of_nth([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2)` is equal to `19`. 

This function can be used to find the maximum value of any column in a matrix, by passing the matrix and the column index as arguments.
























































































































































































































