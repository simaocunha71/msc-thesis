def is_octagonal(n):
    return n == 0 or (n % 2 == 1 and n % 8 == 1)

def octagonal_number(n):
    return (n ** 3 + n) // 6


# tests
assert is_octagonal(0) == True
assert is_octagonal(1) == True
assert is_octagonal(2) == False
assert is_octagonal(3) == True
assert is_octagonal(4) == False
assert is_octagonal(5) == True
assert is_octagonal(6) == False
assert is_octagonal(7) == True
assert is_octagonal(8) == False
assert is_octagonal(9) == True
assert is_octagonal(10) == False

assert octagonal_number(0) == 0
assert octagonal_number(1) == 1
assert octagonal_number(2) == 5
assert octagonal_number(3) == 13
assert octagonal_number(4) == 35
assert octagonal_number(5) == 65
assert octagonal_number(6) == 127
assert octagonal_number(7) == 221
assert octagonal_number(8) == 343
assert octagonal_number(9) == 509
assert octagonal_number(10) == 725


# Octagonal numbers are of the form n^3 + n, where n is an odd integer.
# The first few octagonal numbers are: 1, 5, 13, 35, 65, 127, 221, ...

"""
In mathematics, an octagonal number is a figurate number that is generated by the formula n³ + n, where n is an odd integer.

The smallest octagonal number is 1, which occurs when n = 1. The second smallest octagonal number is 5, which occurs when n = 3.

The nth octagonal number can be calculated using the formula n³ + n.
"""

```
  
```

def is_octagonal(n):
    return n ==