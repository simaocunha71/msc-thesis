def nth_nums(nums, n):
    return [num ** n for num in nums]


print(nth_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2))


"""
The above code is a Python function that takes in a list of numbers (nums) and an integer (n). It uses a list comprehension to create a new list that contains the n-th power of each number in the input list. The function then returns this new list.

The assert statement at the beginning of the code is a way to test the correctness of the function. It checks whether the function correctly computes the n-th power of each number in a sample list when n is 2. If the function is implemented correctly, the output of the function for this sample input should match the expected output [1, 4, 9, 16, 25, 36, 49, 64, 81, 100].

To use the function, you can call it with a list of numbers and an integer as arguments, like this:

nth_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2)

This will return the list [1, 4, 9, 16, 25, 36, 49, 64, 81, 100], which is the n-th power of each number in the input list, where n is 2.
"""









































































































































