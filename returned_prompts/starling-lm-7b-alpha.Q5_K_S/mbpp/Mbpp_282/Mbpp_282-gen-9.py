def sub_list(list1,list2):
    return [x-y for x,y in zip(list1,list2)]


# Python program to test the above function
list1 = [1, 2, 3]
list2 = [4,5,6]

# Function call
print(sub_list(list1,list2))











"""
In the given question, we need to create a function that can subtract two lists element-wise and return a new list as the result. We can achieve this by using the zip() function in Python, which pairs the corresponding elements from the two input lists and returns an iterator of tuples.

To perform the element-wise subtraction, we can use a list comprehension to iterate over the pairs of elements from the two input lists (list1 and list2) and subtract the corresponding elements. The result is a new list containing the subtracted values.

In the provided solution, the sub_list() function takes two arguments: list1 and list2. It uses the zip() function to pair the elements from the two lists and then uses a list comprehension to subtract the elements. The result is a new list where each element is the result of the subtraction of the corresponding elements from the input lists.

To test the function, we create two lists: list1 and list2. We then call the sub_list() function with these two lists as arguments and print the result. In this case, the result should be [-3, -3, -3], as the subtraction of the corresponding elements in the two input lists is 1-4 = -3, 2-5 = -3, and 3-6 = -3.
"""

























































































































