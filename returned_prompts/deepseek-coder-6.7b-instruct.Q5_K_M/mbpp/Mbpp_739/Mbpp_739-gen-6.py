Here is the python solution to the problem:

```python
def find_Index(n):
    i = 1
    while True:
        triangular_number = i*(i+1)//2
        if len(str(triangular_number)) == n:
            return i
        i += 1

print(find_Index(2))
```

In this solution, we generate triangular numbers one by one starting from 1. We stop as soon as we find a triangular number with n digits. We return the index of this number.

You may also use an iterative method to solve the problem:

```python
def find_Index(n):
    i = 1
    while True:
        triangular_number = i*(i+1)//2
        if len(str(triangular_number)) == n:
            return i
        i += 1

print(find_Index(2))
```

Both of these solutions use the formula for the nth triangular number which is n*(n+1)/2. The only difference is that in the second solution, we increment the index 'i' until we find the triangular number with n digits.
```

















































































































































































































































