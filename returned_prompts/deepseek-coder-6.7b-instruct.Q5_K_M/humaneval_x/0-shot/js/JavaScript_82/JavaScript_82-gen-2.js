  const isPrime = (num) => {
    for(let i = 2, sqrt = Math.sqrt(num); i <= sqrt; i++)
      if(num % i === 0) return false; 
    return num > 1;
  }

  return isPrime(string.length);
}

console.log(primeLength('Hello')); // true
console.log(primeLength('abcdcba')); // true
console.log(primeLength('kittens')); // true
console.log(primeLength('orange')); // false

//Explanation:
//The function primeLength first checks if the length of the string is a prime number using a helper function isPrime.
//isPrime checks if a number is a prime by iterating from 2 up to the square root of the number and checking if the number is divisible by any of these values.
//If it is, the function returns false because the number is not a prime. If it gets through all of these checks without finding a number that the number is divisible by, it returns true because the number is a prime.
//Finally, the function primeLength returns the result of isPrime called with the length of the string as its argument.











































































































































































































































