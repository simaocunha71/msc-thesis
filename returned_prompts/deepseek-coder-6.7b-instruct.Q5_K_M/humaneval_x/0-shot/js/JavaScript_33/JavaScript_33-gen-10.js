  const filtered = l.filter((_, index) => index % 3 === 0)
  const sorted = filtered.sort((a, b) => a - b)

  return l.map((_, index) => (index % 3 === 0 ? sorted.shift() : l[index]))
}

console.log(sortThird([1, 2, 3]))
console.log(sortThird([5, 6, 3, 4, 8, 9, 2]))

//The above function first filters out the values at indices divisible by 3. 
//Then it sorts these values.
//Finally, it maps over the original array, replacing the values at indices divisible by 3 with the next value in sorted.
//If the index is not divisible by 3, it keeps the original value.

//The shift() method is used to remove the first element from an array and return that removed element. This is used here to match the problem's requirement of replacing the value at an index divisible by 3 with a sorted value.

//The map() method creates a new array with the results of calling a provided function on every element in the array.
```


















































































































































































































































