  let sum = 0;
  for (let i = 0; i < k; i++) {
      if (arr[i].toString().length <= 2) {
          sum += arr[i];
      }
  }
  return sum;
};

module.exports = addElements;

// the function takes an array and a number as input parameters. It initiates a variable sum as 0 to keep track of the sum of the numbers with at most two digits.
// it loops through the first k elements of the array, checks if the length of the string representation of the number is less than or equal to 2,
// if it is, it adds the number to the sum.
// finally, it returns the sum.
// the function uses the .toString() method to convert the numbers to strings and .length property to count the number of digits.

// The time complexity of this solution is O(k), where k is the input parameter. The space complexity is O(1) because we only use a constant amount of space to store the sum and the input parameters.

/*
  Test the solution:

  console.log(addElements([111,21,3,4000,5,6,7,8,9], 4)); // Output: 24
*/


























































































































































































































