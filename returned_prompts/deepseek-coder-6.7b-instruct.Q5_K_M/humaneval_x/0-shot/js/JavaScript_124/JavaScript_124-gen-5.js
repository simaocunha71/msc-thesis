  if(!date) 
    return false;

  const dateRegex = /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-(\d{4})$/;
  
  if(!dateRegex.test(date)) 
    return false;

  const [month, day, year] = date.split("-");

  const dateObj = new Date(year, month - 1, day);

  const isoDate = dateObj.toISOString();

  return isoDate.substring(0,10) === `${year}-${month}-${day}`;
}

Explanation:
This function works by first checking if the date string is empty, in which case it returns false. It then checks if the date string matches the required format using a regular expression. If it doesn't, it returns false. It then splits the date string into its components (month, day, year) and creates a new Date object using these components, adjusting for the fact that JavaScript months are 0-indexed. Finally, it converts the Date object back to a string and compares it to the original date string, returning true if they match and false otherwise.
*/



















































































































































































































