  // First, we sort the array in descending order.
  arr.sort((a, b) => b - a);

  // Then we return the first k elements of the array.
  return arr.slice(0, k);
}

console.log(maximum([-3, -4, 5], 3)); // [-4, -3, 5]
console.log(maximum([4, -4, 4], 2)); // [4, 4]
console.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1)); // [2]

```

This code sorts the array in descending order and then returns the first k elements. The time complexity is O(n log n) because of the sorting, and the space complexity is O(k) for storing the result, where n is the length of the array.













































































































































































































































































































