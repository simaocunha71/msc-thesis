  let neg = Math.max(...lst.filter(i => i < 0)),
      pos = Math.min(...lst.filter(i => i > 0));
  
  return [(neg || neg === 0) ? neg : null, (pos || pos === 0) ? pos : null];
}

console.log(largestSmallestIntegers([2, 4, 1, 3, 5, 7])); //== [null, 1]
console.log(largestSmallestIntegers([])); //== [null, null]
console.log(largestSmallestIntegers([0])); //== [null, null]
console.log(largestSmallestIntegers([-2, -4, 1, 3, -5, 7])); //== [-2, 1]
console.log(largestSmallestIntegers([2, 4, -10, 3, 5, 7])); //== [-10, 2]

This solution filters out the negative and positive numbers respectively and finds the max of negative numbers and the min of positive numbers. If there are no negative or positive numbers, it returns null.

This solution is succinct and elegant, and it leverages the built-in JavaScript functions Math.max and Math.min as well as the spread operator (...) to find the max and min of the filtered lists. The filter method is used to create the negative and positive lists, and the logical OR operator (||) is used to return null if the filtered list is empty (i.e., there are no negative or positive numbers).
*/


















































































































































