  let stack = [];

  for (let i = 0; i < string.length; i++) {
    if (string[i] === '[') {
      stack.push(string[i]);
    } else {
      if (stack.length === 0) {
        return false;
      }
      stack.pop();
    }
  }

  return stack.length === 0 ? false : true;
}

console.log(isNested('[[]]'));
console.log(isNested('[]]]]]]][[[[[]'));
console.log(isNested('[][]'));
console.log(isNested('[]'));
console.log(isNested('[[][]]'));
console.log(isNested('[[]][['));

```
The function works by iterating through the string and pushing every '[' onto a stack. For every ']', it pops the last element from the stack. If at any point the stack is empty and we encounter a ']', we return false as there's no matching '['. Finally, if the stack is empty, we return false because there were no nested brackets, otherwise we return true.
```














































































































































































































































