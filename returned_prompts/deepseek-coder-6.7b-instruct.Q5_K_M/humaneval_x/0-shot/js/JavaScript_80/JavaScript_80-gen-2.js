  if(s.length < 3){
    return false;
  }
  for(let i = 0; i < s.length - 2; i++){
    if(s[i] === s[i + 1] || s[i] === s[i + 2] || s[i + 1] === s[i + 2]){
      return false;
    }
  }
  return true;
}

console.log(isHappy('a')); // false
console.log(isHappy('aa')); // false
console.log(isHappy('abcd')); // true
console.log(isHappy('aabb')); // false
console.log(isHappy('adb')); // true
console.log(isHappy('xyy')); // false

// The solution is a simple for loop that iterates over the string and checks if any 3 consecutive characters are the same. If they are, the function returns false. If the loop completes without finding any such characters, the function returns true, indicating that the string is "happy".

// Also, the length check is added to ensure the string's length is at least 3.

// Time complexity: O(n), where n is the length of the string.
// Space complexity: O(1), because no additional space is used that scales with the size of the input.

















































































































































































































