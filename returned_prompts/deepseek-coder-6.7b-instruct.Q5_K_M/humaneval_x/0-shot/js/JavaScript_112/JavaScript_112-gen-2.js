  let newStr = [...s].filter(x => !c.includes(x)).join('');
  let isPalindrome = newStr === newStr.split('').reverse().join('');
  return [newStr, isPalindrome];
};

console.log(reverseDelete('abcde', 'ae')); // ['bcd', false]
console.log(reverseDelete('abcdef', 'b')); // ['acdef', false]
console.log(reverseDelete('abcdedcba', 'ab')); // ['cdedc', true]

/*
  The function reverseDelete is taking two parameters, s and c. It is filtering the string s and removing all characters that are in string c.
  It then checks if the new string is a palindrome by comparing the new string to its reversed version. If they match, it means the string is a palindrome so it returns true. Otherwise, it returns false.
  The function then returns the new string and the palindrome check result as a tuple.
*/

```
















































































































































































































































































