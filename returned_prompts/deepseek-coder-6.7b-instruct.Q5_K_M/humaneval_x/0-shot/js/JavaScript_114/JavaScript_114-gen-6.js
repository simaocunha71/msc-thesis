  let min = Number.MAX_SAFE_INTEGER;
  let sum = 0;
  
  for(let i = 0; i < nums.length; i++){
    sum += nums[i];
    min = Math.min(min, sum);
    if(sum > 0){
      sum = 0;
    }
  }
  
  return min;
}


console.log(minSubArraySum([2, 3, 4, 1, 2, 4])); // 1
console.log(minSubArraySum([-1, -2, -3])); // -6


In this solution, we use a greedy approach. We iterate over the array from the start to end, maintaining the sum of the numbers. If the sum is less than the minimum sum we've seen so far, we update the minimum sum. If the sum of the numbers is positive, we reset it to 0. The minimum sum we've seen at the end is the minimum sum of any non-empty subarray of nums.
This solution runs in O(n) time.
*/





























































































































































































































































