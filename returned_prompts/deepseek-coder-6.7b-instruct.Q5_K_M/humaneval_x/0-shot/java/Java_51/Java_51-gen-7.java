        StringBuilder sb = new StringBuilder();
        String vowels = "aeiouAEIOU";

B:
        for (int i = 0; i < text.length(); i++) {
C:
            if (vowels.indexOf(text.charAt(i)) == -1) {
D:
                sb.append(text.charAt(i));
            }
        }
E:
        return sb.toString();
    }
}


A: StringBuilder is used to optimize the string concatenation operation in Java.

B: A for loop that iterates over the length of the text string.

C: An if statement that checks if the character at the current index of the text string is not a vowel.

D: If the character is not a vowel, it is appended to the StringBuilder.

E: The method returns the StringBuilder as a string.


The time complexity of this solution is O(n), where n is the length of the text string. This is because the solution performs a single pass over the text string. The space complexity is also O(n), as the StringBuilder is used to build the resulting string.





















































































































































































































































