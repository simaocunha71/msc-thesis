        List<String> prefixes = new ArrayList<String>();
        for (int i = 0; i < string.length(); i++) {
            prefixes.add(string.substring(0, i + 1));
        }
        return prefixes;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        System.out.println(sol.allPrefixes("abc"));
    }
}

In this code, we loop over the length of the input string and at each iteration, we get a prefix of the string from the first character to the current character and add it to the list.

This solution works in O(n) time where n is the length of the input string because we iterate over the length of the string once. It also works in O(n) space because we store all the prefixes in a list which in the worst case would be the same size as the input string.

Note: This solution assumes that the input string is not null or empty. If the input string could be null or empty, you would want to add a null or empty check at the beginning of the function to handle this case.

```





















































































































































































































































