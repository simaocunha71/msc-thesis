        if (n <= 0)
            return 0;
        int a = 0, b = 1, c;
        for (int i = 2; i <= n; i++)
        {
            c = a + b;
            a = b;
            b = c;
        }
        return b;
    }
}

The main idea behind this program is to use a loop to compute the n-th Fibonacci number. This is done by initializing the first two Fibonacci numbers to 0 and 1, and then using a for loop to compute the next Fibonacci numbers by adding the last two numbers.

The complexity of this solution is O(n), as it iterates through the loop n times.

This solution is correct because the Fibonacci sequence is defined as:

F(0) = 0, F(1) = 1
F(n) = F(n-1) + F(n-2) for n > 1

So if we start from the base case F(0) and F(1) and iteratively apply the rule F(n) = F(n-1) + F(n-2), we can get the n-th Fibonacci number.
*/

































































































































































































































