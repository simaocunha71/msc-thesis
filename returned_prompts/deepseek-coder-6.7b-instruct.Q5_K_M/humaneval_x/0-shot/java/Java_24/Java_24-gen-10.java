        for(int i = n/2; i > 0; i--) {
            if(n % i == 0)
                return i;
        }
        return -1; // if no divisor found
    }
}

This solution works by iterating from n/2 down to 1. It checks each number to see if it divides evenly into n by using the modulus operator (%). If it does, it returns that number. If no such number is found after checking all possible numbers, it returns -1 to indicate that there is no other divisor.

The time complexity of this solution is O(n), as it iterates through half of the numbers in the worst case scenario. The space complexity is O(1), as it only uses a constant amount of space to store the variables i and n.

Please provide a more detailed explanation of your problem and ask for help with it.





























































































































































































































































