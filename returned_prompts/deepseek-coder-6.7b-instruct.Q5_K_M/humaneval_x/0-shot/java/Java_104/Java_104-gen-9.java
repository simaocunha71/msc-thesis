        List<Integer> result = new ArrayList<>();
        for(Integer num : x){
            if(hasEvenDigit(num)) continue;
            result.add(num);
        }
        Collections.sort(result);
        return result;
    }

    private boolean hasEvenDigit(Integer num){
        while(num > 0){
            if((num % 10) % 2 == 0) return true;
            num /= 10;
        }
        return false;
    }
}

This program will take a list of integers and return a new list of integers that don't have an even digit in them. It does this by iterating over the original list and checking each integer if it has an even digit, if it does, it skips that integer, if not, it adds it to the result list. Finally, it sorts the result list and returns it.

The time complexity of this program is O(nlogn) due to sorting and the space complexity is O(n) for storing the result list.


















































































































































































































































































