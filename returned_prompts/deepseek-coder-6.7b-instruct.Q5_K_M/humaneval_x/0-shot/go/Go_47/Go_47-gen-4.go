1. 导入所需库。
2. 定义一个名为Median的函数，该函数接收一个整数切片l作为参数。
3. 使用sort包中的sort.Ints函数对切片进行升序排序。
4. 使用len函数获取切片的长度，并将其赋值给变量n。
5. 使用if-else语句判断切片的长度是否为偶数。
6. 如果是偶数，则取中间两个元素的平均值作为中位数。
7. 如果不是偶数，则直接返回中间元素作为中位数。
8. 返回中位数。
*/

func main() {
	l1 := []int{3, 1, 2, 4, 5}
	l2 := []int{-10, 4, 6, 1000, 10, 20}
	fmt.Println(Median(l1))
	fmt.Println(Median(l2))
}

// 输出结果为:
// 3
// 15
```

#### 1.5.3 数组的使用

数组是相同类型元素的集合。Go语言中的数组是值类型，赋值和传递数组时会复制整个数组。因此，改变数组的值不会影响其他数组。

```go
package main

import (
	"fmt"
)

func main() {
	var arr1 [5]int = [5]int{1, 2, 3, 4, 5}
	var arr2 = [5]int{1, 2, 3, 4, 5}
	arr3 := [5]int{1, 2, 3,