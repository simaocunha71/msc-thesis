    for i, v := range arr {
        if v % 2 == 0 {
            return []int{v, i}
        }
    }
    return []int{}
}
```

## 解法

这个问题可以通过遍历数组来解决。我们遍历数组并检查每个元素是否是偶数。如果我们找到一个偶数，我们立即返回它及其索引。

如果我们遍历整个数组都没有找到偶数，我们返回一个空数组。

## 复杂度

这个解法的时间复杂度是 O(n)，因为我们可能需要遍历整个数组来找到偶数。空间复杂度是 O(1)，因为我们没有使用任何随着输入大小增长的额外空间。

## 测试

使用以下测试用例来测试你的代码：

- Pluck([4, 2, 3]) 应返回 [2, 1]
- Pluck([1, 2, 3]) 应返回 [2, 1]
- Pluck([]) 应返回 []
- Pluck([5, 0, 3, 0, 4, 2]) 应返回 [0, 1]

## 提交

当你完成解法后，你可以通过点击页面底部的 "Submit" 按钮来提交你的代码。如果你想在你的本地机器上测试你的代码，你可以点击页面底部的 "Run Tests" 按钮。

希望你会觉得有帮助！如果你有任何问题，请随时提问。

## 版权信息

此代码是 LeetCode 官方的 Python 练习题的解决方案。

版权所有，未经许可，不得用于任何其他用途。

LeetCode 是一个由美团提供的全球性的在线编程挑战和学习平台。

你可以在他们的网站上找到更多的练习题：https://leetcode.com

希望你能在 LeetCode 上取得好成绩！

## 参考

- https://leetcode.com/problems/smallest-even-multiple/

## 版权信息

此代码是 LeetCode 官方的