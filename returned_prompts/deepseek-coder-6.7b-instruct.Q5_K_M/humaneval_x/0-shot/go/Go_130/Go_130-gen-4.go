
	result := make([]float64, n + 1)
	result[0] = 3
	if n > 0 {
		result[1] = 1
	}
	if n > 1 {
		result[2] = 2
	}

	for i := 3; i <= n; i++ {
		if i % 2 == 0 {
			result[i] = 1 + float64(i) / 2
		} else {
			result[i] = result[i - 1] + result[i - 2] + result[i + 1]
		}
	}

	return result
}
```

The function Tri(n) computes the first n+1 numbers in the Tribonacci sequence. It uses a for loop to iterate through the sequence, and at each step, it checks whether the current number's index is even or odd. If it's even, the current number is calculated as 1 + n/2. If it's odd, the current number is calculated as the sum of the previous number, the second previous number, and the next number in the sequence.

The function returns a slice of float64 values, where each value corresponds to the nth number in the Tribonacci sequence.

For example, if you call Tri(3), the function returns the slice [1, 3, 2, 8].




































































































































































































