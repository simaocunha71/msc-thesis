
    return "".join([chr(((ord(ch) - 5 - ord("a")) % 26) + ord("a")) for ch in s])


# Test the function
print(encode_shift("hello"))  # Output: 'mjqqt'
print(decode_shift("mjqqt"))  # Output: 'hello'

```

In the encode_shift function, for each character in the string, the ASCII value is obtained using the ord() function. Then the character is shifted by 5 positions to the right, and the modulo 26 is applied to wrap back around the alphabet. Then the new ASCII value is converted back to a character using the chr() function.

In the decode_shift function, we simply shift the characters 5 positions to the left instead.

The code returns the encoded and decoded strings respectively.
























































































































































































































































































































