
def bf(planet1, planet2):
    planets = ['Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune']
    if planet1 not in planets or planet2 not in planets:
        return ()
    else:
        index1 = planets.index(planet1)
        index2 = planets.index(planet2)
        if index1 > index2:
            index1, index2 = index2, index1
        return tuple(planets[index1+1:index2])

print(bf("Jupiter", "Neptune"))  # ==> ("Saturn", "Uranus")
print(bf("Earth", "Mercury"))  # ==> ("Venus")
print(bf("Mercury", "Uranus"))  # ==> ("Venus", "Earth", "Mars", "Jupiter", "Saturn")
print(bf("Pluto", "Neptune"))  # ==> ()
print(bf("Earth", "Pluto"))  # ==> ()
print(bf("Earth", "Earth"))  # ==> ()

This solution works by first checking if the given planets are in the list of planets. If not, it returns an empty tuple. If they are, it finds their indexes and sorts them so that index1 is the smaller of the two. It then returns a tuple of all planets whose indexes are between index1 and index2, inclusive.




































































































































































