
def is_sorted(lst):
    return lst == sorted(lst)

# Test cases
print(is_sorted([5])) # ➞ True
print(is_sorted([1, 2, 3, 4, 5])) # ➞ True
print(is_sorted([1, 3, 2, 4, 5])) # ➞ False
print(is_sorted([1, 2, 3, 4, 5, 6])) # ➞ True
print(is_sorted([1, 2, 3, 4, 5, 6, 7])) # ➞ True
print(is_sorted([1, 3, 2, 4, 5, 6, 7])) # ➞ False
print(is_sorted([1, 2, 2, 3, 3, 4])) # ➞ True
print(is_sorted([1, 2, 2, 2, 3, 4])) # ➞ False



This solution works by comparing the original list to a sorted version of the list. If they are identical, the original list is sorted. If not, the original list is not sorted. This solution assumes that the list will not contain duplicate numbers as requested in the problem statement.

































































































































































































