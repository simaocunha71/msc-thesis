
```python
def count_distinct_characters(string: str) -> int:
    return len(set(string.lower()))
```

The `set` function in Python will eliminate any duplicate characters from the string, and the `len` function will return the number of unique characters.

The `string.lower()` function is used to make the function case-insensitive. This means that both 'a' and 'A' will be treated as the same character.

This solution assumes that the string contains only alphanumeric characters and spaces. If the string might contain other types of characters, you may need to add some additional error checking to handle those cases.

Note: This solution uses Python's built-in `set` data structure, which is implemented as a hash table, which allows for constant time complexity O(1) for the `in` operator. This makes the code run very efficiently.























































































































































































































































































































