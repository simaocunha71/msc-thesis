    int count=0;
    bool flag = false;
    for(int i=0;i<S.length();i++){
        if(S[i] == 'I'){
            flag = true;
        }
        if(S[i] == '.' || S[i] == '?' || S[i] == '!' || i == S.length()-1){
            if(flag){
                count++;
            }
            flag = false;
        }
    }
    return count;
}
int main()
{
    printf("%d",is_bored("Hello world"));
    printf("%d",is_bored("The sky is blue. The sun is shining. I love this weather"));
    return 0;
}
```

This program uses a for loop to iterate over the string. For each character, it checks if it is the start of a sentence ('.', '?', '!' or end of string), and if the previous character was 'I'. If both conditions are met, it increments the count of boredoms. 

The time complexity of this program is O(n), as it iterates through the string once. The space complexity is O(1), as it only uses a few variables and no additional data structures.































































































































































































































