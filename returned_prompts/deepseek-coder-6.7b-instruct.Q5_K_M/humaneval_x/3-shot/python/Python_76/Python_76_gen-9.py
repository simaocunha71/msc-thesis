    if x == 1:
        return True

    i = 2
    while i * i <= x:
        if x % i:
            i += 1
        else:
            x //= i

    return x == n

# Test cases
print(has_close_elements([1.0, 2.0, 3.0], 0.5))  # False
print(has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3))  # True
print(separate_paren_groups('(  )  (( ))  (( )( ))'))  # ['()', '(())', '(()())']
print(truncate_number(3.5))  # 0.5
print(is_simple_power(1, 4))  # True
print(is_simple_power(2, 2))  # True
print(is_simple_power(8, 2))  # True
print(is_simple_power(3, 2))  # False
print(is_simple_power(3, 1))  # False
print(is_simple_power(5, 3))  # False


A: 

















































































































































































































