 The script should also handle the key rotation process in a way that ensures no data is lost, and all communication remains secure.

Here's a sample shell script that accomplishes key rotation:

```bash
#!/bin/bash

# Set the path to the encryption key file
KEY_FILE=/path/to/encryption/key

# Set the path to the temporary key file
TEMP_KEY_FILE=/path/to/temporary/key

# Set the rotation interval in hours
ROTATION_INTERVAL=24

# Function to rotate the encryption key
rotate_key() {
  # Create a copy of the current key file
  cp $KEY_FILE $TEMP_KEY_FILE
  
  # Generate a new encryption key
  openssl rand -base64 32 > $KEY_FILE
  
  # Update the system's configuration to use the new key
  # (This step may vary depending on your system's configuration)
  # ...
  
  # Remove the temporary key file
  rm $TEMP_KEY_FILE
}

# Check if the current time is a multiple of the rotation interval
if [ $(( $(date +%s) % 86400 )) -eq 0 ]; then
  # Rotate the encryption key
  rotate_key
fi
```

This script uses the `openssl` command to generate a new encryption key every 24 hours. The `rotate_key` function creates a copy of the current key file, generates a new key, updates the system's configuration to use the new key, and then removes the temporary key file.

The script checks if the current time is a multiple of the rotation interval using the `date` command. If it is, the `rotate_key` function is called to rotate the encryption key.

Note that this script assumes that the system's configuration can be updated to use the new key. The exact steps to update the configuration may vary depending on your system's configuration.

Also, this script generates a new key by using the `openssl rand` command, which generates a random 32-byte base64-encoded string. You may want to adjust this to generate a key of a specific length or format, depending on your system's requirements.

Remember to update the `KEY_FILE` and `TEMP_KEY_FILE` variables to point to the actual paths of your encryption key files. Additionally, you may need to modify the `rotate_key` function to match the specific requirements of your system.