 Here is an example of how you can implement this:

```python
import time
import iptc

# List of IP addresses to block
blocked_ips = ["1.1.1.1", "2.2.2.2", "3.3.3.3"]

# Create a logger object
logger = open("blocked_ips.log", "a")

try:
    # Get the current time
    current_time = int(time.time())

    # Loop through each IP address
    for ip in blocked_ips:
        # Create a new rule for the IP address
        rule = iptc.Rule()
        rule.in_interface = "eth0"
        rule.src = ip
        rule.protocol = "tcp"
        rule.target = iptc.Target(iptc.Rule.JOURNAL)

        # Add the rule to the chain
        chain = iptc.Chain(iptc.Table(iptc.Table.FILTER), "INPUT")
        chain.insert_rule(rule)

        # Log the blocked IP address and the time it was blocked
        logger.write(f"{ip} blocked at {current_time} UTC\n")

        # Sleep for 24 hours
        time.sleep(86400)

except Exception as e:
    print(f"Error: {e}")

finally:
    # Close the logger
    logger.close()
```

This script uses the `iptc` module to create a new rule for each IP address in the `blocked_ips` list. The rule is added to the `INPUT` chain in the `FILTER` table, which will block incoming traffic from the IP address. The script also logs the blocked IP address and the time it was blocked to a file named `blocked_ips.log`. The script then sleeps for 24 hours before continuing.

Note that this script assumes that the `iptc` module is installed and that the firewall is configured to use the `FILTER` table. You may need to modify the script to match your specific firewall configuration.

Also, this script is just an example, you should consider implementing a more robust system for blocking IP addresses, such as using a database to store the blocked IP addresses and implementing a mechanism for updating the firewall rules. Additionally, you should consider implementing a mechanism for removing blocked IP addresses after a certain period of time.

It's also important to note that this script is just an example, and you should not use it in production without proper testing and validation. You should also consider implementing a more robust system for blocking IP addresses, such as using a database to store the