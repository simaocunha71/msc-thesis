```
const isEqualToSumEven = (n) => {
  for (let i = 2; i <= n; i += 2) {
    let sum = 0;
    for (let j = 2; j <= n; j += 2) {
      if (sum + j <= n) {
        sum += j;
      } else {
        break;
      }
    }
    if (sum === n) {
      return true;
    }
  }
  return false;
};
```


Explanation: 
The function `isEqualToSumEven(n)` checks if the given number `n` can be written as the sum of exactly 4 positive even numbers. It uses two nested loops to generate all possible combinations of even numbers. The outer loop starts from 2 and goes up to `n`, and the inner loop also starts from 2 and goes up to `n`. It checks if the sum of the even numbers generated by the inner loop is equal to `n`. If it finds a combination that sums up to `n`, it returns `true`. If it doesn't find any such combination after checking all possible combinations, it returns `false`. This approach has a time complexity of O(n^2), which is acceptable for small values of `n`. However, for larger values of `n`, this approach may be slow and may need to be optimized. 