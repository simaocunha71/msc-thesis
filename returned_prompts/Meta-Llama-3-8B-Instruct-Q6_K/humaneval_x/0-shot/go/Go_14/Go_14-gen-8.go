```go
package main

import (
	"fmt"
	"strings"
)

func AllPrefixes(str string) []string {
	var result []string
	for i := 0; i <= len(str); i++ {
		result = append(result, str[:i])
	}
	return result
}

func main() {
	fmt.Println(AllPrefixes("abc"))
}
```

Explanation:
The function `AllPrefixes` takes a string as input and returns a list of all prefixes from shortest to longest. The prefixes are generated by taking slices of the input string from the beginning to the end.

The function uses a for loop to iterate over the length of the input string, and for each iteration, it appends a slice of the input string from the beginning to the current index to the result list.

The result list is then returned.

In the main function, we call the `AllPrefixes` function with the input string "abc" and print the result. The output will be `["a", "ab", "abc"]`.

Note: The function includes the empty string as a prefix, which is an edge case. If you want to exclude the empty string, you can modify the loop condition to `i < len(str)`.