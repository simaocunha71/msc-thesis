    public double truncateNumber(double number) {
        int intPart = (int) number;
        double decimalPart = number - intPart;
        return decimalPart;
    }
}  // this function takes a double number as input and returns the decimal part of the number.
// The decimal part is obtained by subtracting the integer part from the number. In Java, the integer part of a double can be obtained by casting the double to an int. This is because the integer part of a double is the largest integer that is smaller than or equal to the double. For example, the integer part of 3.5 is 3, and the decimal part is 0.5.  // This function can be used to get the decimal part of any double number. For example, truncateNumber(3.5) will return 0.5.  // The function works correctly for all positive double numbers, including those with decimal parts of any length. For example, truncateNumber(1.2345) will return 0.2345.  // The function does not work correctly for negative numbers. If you want to truncate a negative number, you will need to add additional code to handle the sign of the number.  // The function does not work correctly for non-integer decimal parts. If you want to truncate a number with a non-integer decimal part, you will need to add additional code to handle the decimal part.  // The function does not work correctly for very large or very small numbers. If you want to truncate a very large or very small number, you will need to add additional code to handle the overflow or underflow.  // The function does not work correctly for numbers with decimal parts that are larger than 1. If you want to truncate a number with a decimal part larger than 1, you will need to add additional code to handle the decimal part.  // The function does not work correctly for numbers with decimal parts that are negative. If you want to truncate a number with a negative decimal part, you will need to add additional code to handle the sign of the decimal part.  // The function does not work correctly for numbers with decimal parts that are zero. If you want to truncate a number with a zero decimal part, you will need to add additional code to handle the decimal part.  // The function does not work correctly for numbers with decimal parts that are NaN or infinity. If you want to truncate a number with a NaN or infinity decimal part, you will need