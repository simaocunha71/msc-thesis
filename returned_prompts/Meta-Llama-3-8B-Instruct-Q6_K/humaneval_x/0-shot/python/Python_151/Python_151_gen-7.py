def double_the_difference(lst):
    return sum(i**2 for i in lst if isinstance(i, int) and i % 2 != 0)  # or use set(lst) and set() will be faster
print(double_the_difference([1, 3, 2, 0]))  # 10
print(double_the_difference([-1, -2, 0]))  # 0
print(double_the_difference([9, -2]))  # 81
print(double_the_difference([0]))  # 0
print(double_the_difference([]))  # 0

# this is a generator expression that iterates over the list, checks if each element is an integer and odd, squares it, and sums the results. The isinstance() function is used to check if the element is an integer, and the modulus operator is used to check if the element is odd. The sum() function is used to sum the squared values. 

# The time complexity of this function is O(n), where n is the number of elements in the list, because it needs to iterate over the list once. The space complexity is O(1), because it only uses a constant amount of space to store the sum and the generator expression.  # Python's built-in set() function can be used to remove duplicates from the list. If a list contains duplicate elements, set() will return a set with unique elements.  # Python's built-in set() function can be used to remove duplicates from the list. If a list contains duplicate elements, set() will return a set with unique elements.  # Python's built-in set() function can be used to remove duplicates from the list. If a list contains duplicate elements, set() will return a set with unique elements.  # Python's built-in set() function can be used to remove duplicates from the list. If a list contains duplicate elements, set() will return a set with unique elements.  # Python's built-in set() function can be used to remove duplicates from the list. If a list contains duplicate elements, set() will return a set with unique elements.  # Python's built-in set() function can be used to remove duplicates from the list. If a list contains duplicate elements, set() will return a set with unique elements.  # Python's built-in set() function can be used to remove duplicates from the list. If a list contains duplicate elements, set() will return a set with unique elements.  # Python's built-in set