```
def split_words(txt):
    words = txt.split()
    if not words and ',' in txt:
        words = txt.split(',')
    if not words:
        return sum(1 for i, c in enumerate(txt) if c.islower() and (ord(c) - ord('a')) % 2 == 1)
    return words
```
This function first attempts to split the input string into words using whitespace as the delimiter. If this fails (i.e., the input string does not contain any whitespace), it then attempts to split the string using commas as the delimiter. If this also fails, it counts the number of lowercase letters in the string that appear in odd positions in the alphabet. The function returns the resulting list of words or the count of lowercase letters in odd positions in the alphabet, depending on the input.  The use of `enumerate` allows us to iterate over the string and keep track of the position of each character. The expression `(ord(c) - ord('a')) % 2 == 1` checks whether the position of the character in the alphabet is odd. The `sum` function is used to count the number of characters that meet this condition.  The function uses the `islower` method to check whether a character is lowercase.  The `ord` function is used to convert a character to its ASCII value, which can be used to determine its position in the alphabet.  The `- ord('a')` expression is used to shift the ASCII value of the character to a range of 0-25, which corresponds to the positions of the lowercase letters in the alphabet.  The `% 2 == 1` expression is used to check whether the position is odd.  The `enumerate` function is used to iterate over the string and keep track of the position of each character.  The `sum` function is used to count the number of characters that meet the condition.  The `return` statement is used to return the resulting list of words or the count of lowercase letters in odd positions in the alphabet.  The `if` and `elif` statements are used to handle the different cases that may arise.  The `split` function is used to split the input string into words.  The `lower` function is used to convert the input string to lowercase.  The `isalpha` function is used to check whether a character is a letter.  The `isdigit` function is used to check whether a character is a digit.  The `