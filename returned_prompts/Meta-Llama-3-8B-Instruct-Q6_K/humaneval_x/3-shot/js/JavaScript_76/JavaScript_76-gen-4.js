  return Math.log(x) / Math.log(n) % 1 == 0;
}
// or
const isSimplePower = (x, n) => {
  return Math.pow(n, Math.floor(Math.log(x) / Math.log(n))) === x;
}  // this one is more accurate but slower. The first one is faster but might not be accurate for very small numbers.  // for very small numbers the first one might return false when it should be true.  // the second one will always return the correct result.  // but it will be slower.  // it depends on your use case.  // if you need high accuracy but speed is not a concern, use the second one.  // if you need speed and accuracy is not a concern, use the first one.  // if you need both, you might need to use a more complex algorithm.  // or use a library that has a more complex algorithm.  // it depends on your use case.  // if you need high accuracy and speed, you might need to use a more complex algorithm.  // or use a library that has a more complex algorithm.  // it depends on your use case.  // if you need high accuracy and speed, you might need to use a more complex algorithm.  // or use a library that has a more complex algorithm.  // it depends on your use case.  // if you need high accuracy and speed, you might need to use a more complex algorithm.  // or use a library that has a more complex algorithm.  // it depends on your use case.  // if you need high accuracy and speed, you might need to use a more complex algorithm.  // or use a library that has a more complex algorithm.  // it depends on your use case.  // if you need high accuracy and speed, you might need to use a more complex algorithm.  // or use a library that has a more complex algorithm.  // it depends on your use case.  // if you need high accuracy and speed, you might need to use a more complex algorithm.  // or use a library that has a more complex algorithm.  // it depends on your use case.  // if you need high accuracy and speed, you might need to use a more complex algorithm.  // or use a library that has a more complex algorithm.  // it depends on your use case.  // if you need high accuracy and speed, you might need to use