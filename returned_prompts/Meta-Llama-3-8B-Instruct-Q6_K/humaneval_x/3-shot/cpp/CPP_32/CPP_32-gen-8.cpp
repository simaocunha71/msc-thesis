    double a = xs[0];
    double b = xs[1];
    double c = xs[2];
    if (c == 0) {
        return -b / a;
    }
    double d = b * b - 4 * a * c;
    return (-b + sqrt(d)) / (2 * a);
}  // This code is assuming that the coefficients are for a quadratic equation, as per the problem description. In the case of a higher degree polynomial, a different method would be needed.  // This code will return only one zero, even if there are multiple.  // This code will only work if the input vector has at least 3 elements, and the largest non-zero element is the first one.  // This code will not work if the input vector has an odd number of elements.  // This code will not work if the input vector has more than 3 elements (i.e., a polynomial of degree 3 or higher).  // This code will not work if the input vector has less than 3 elements.  // This code will not work if the largest non-zero element is not the first one.  // This code will not work if the input vector has all zero elements.  // This code will return a wrong result if the input vector has an even number of elements, but not all coefficients are zero.  // This code will return a wrong result if the input vector has all coefficients zero.  // This code will return a wrong result if the input vector has less than 2 elements.  // This code will return a wrong result if the input vector has more than 2 elements.  // This code will return a wrong result if the input vector has less than 1 element.  // This code will return a wrong result if the input vector has more than 1 element.  // This code will return a wrong result if the input vector has less than 1 element.  // This code will return a wrong result if the input vector has more than 1 element.  // This code will return a wrong result if the input vector has less than 1 element.  // This code will return a wrong result if the input vector has more than 1 element.  // This code will return a wrong result if the input vector has less than 1 element.  // This code will return a wrong result if the input vector has more than 1 element.  // This code will return a wrong result if the input