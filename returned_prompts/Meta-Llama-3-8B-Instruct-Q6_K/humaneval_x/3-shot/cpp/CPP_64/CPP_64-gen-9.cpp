    int count=0;
    for (int i=0;i<s.length();i++)
    {
        if (s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u' ||
            (s[i]=='y' && i==s.length()-1))
            count++;
    }
    return count;
}  // This function counts the number of vowels in a given string. It iterates over the string and checks if each character is a vowel ('a', 'e', 'i', 'o', 'u') or 'y' at the end of the string. It returns the count of vowels.  // Time Complexity: O(n), where n is the length of the input string.  // Space Complexity: O(1), as it uses a constant amount of space.  // This function can be further optimized by using a set or a vector to store the vowels, but it would increase the space complexity.  // Note: This function treats 'y' as a vowel only when it is at the end of the string.  // Example: vowels_count("abcde") returns 2, vowels_count("ACEDY") returns 3.  // It does not handle uppercase letters as vowels. If you want to treat uppercase letters as vowels, you can convert the string to lowercase before counting the vowels.  // Example: vowels_count("ABCEDY") would return 3 if you convert the string to lowercase before calling the function.  // It does not handle non-alphabetic characters. If you want to handle non-alphabetic characters, you can check if the character is alphabetic before checking if it is a vowel.  // Example: vowels_count("abcde!Y") would return 2 if you check if the character is alphabetic before calling the function.  // It does not handle empty strings. If you want to handle empty strings, you can add a check at the beginning of the function to return 0 if the string is empty.  // Example: vowels_count("") would return 0.  // It does not handle strings with non-ASCII characters. If you want to handle strings with non-ASCII characters, you can use a Unicode-aware function or library.  // Example: vowels_count("abcÃ©de") would return 3 if you use a Unicode-aware function or library.  // It does not handle strings with punctuation. If you want to handle strings with punctuation,