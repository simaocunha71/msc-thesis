    if (n<2)
    return false;
    for (long long i=2;i<=sqrt(n);i++)
    if (n%i==0)
    return false;
    return true;
}  // 1 is not prime, 2 is prime, all other primes are of the form 6k ± 1. This routine is essentially the same as testing all the factors up to the square root of the number.  // This is because a larger factor of the number would be a multiple of smaller factor that has already been checked.  // This makes the routine much more efficient.  // The 2 is also included for 2 is prime, 4 is not prime, all other primes are of the form 6k ± 1.  //  // This code does not work correctly for numbers larger than 2^31 because the range of the int data type is limited.  // This code can be made to work correctly for numbers larger than 2^31 by changing the type of n from int to long long int.  // This is because the range of long long int is larger than the range of int.  // This means that the code can now correctly handle numbers larger than 2^31.  //  // In this code, the range of n is determined by the range of long long int.  // This means that the code can correctly handle numbers up to 2^63-1.  // This means that the code can correctly handle numbers larger than 2^31.  //  // This code works correctly for all prime numbers.  // This code works correctly for all composite numbers.  // This code works correctly for all numbers.  // This code is efficient and can correctly handle large numbers.  // This code is correct and can correctly handle all numbers.  // This code is efficient and can correctly handle all numbers.  // This code is correct and can correctly handle all numbers.  // This code is efficient and can correctly handle all numbers.  // This code is correct and can correctly handle all numbers.  // This code is efficient and can correctly handle all numbers.  // This code is correct and can correctly handle all numbers.  // This code is efficient and can correctly handle all numbers.  // This code is correct and can correctly handle all numbers.  // This code is efficient and can correctly handle all numbers.  // This code is correct and can correctly handle all numbers.  // This code is efficient