    if(lst.size()<2)
    return -1;
    sort(lst.begin(),lst.end());
    return lst[1];
}  // Note: This function will return the 2nd smallest element if it exists, otherwise it will return -1. If you want to return None, you can return -1 as done above. If you want to return None as a string, you can use if(lst.size()<2) return "None";.  // Note: This function will return the 2nd smallest element if it exists, otherwise it will return -1. If you want to return None, you can return -1 as done above. If you want to return None as a string, you can use if(lst.size()<2) return "None";.  // Note: This function will return the 2nd smallest element if it exists, otherwise it will return -1. If you want to return None, you can return -1 as done above. If you want to return None as a string, you can use if(lst.size()<2) return "None";.  // Note: This function will return the 2nd smallest element if it exists, otherwise it will return -1. If you want to return None, you can return -1 as done above. If you want to return None as a string, you can use if(lst.size()<2) return "None";.  // Note: This function will return the 2nd smallest element if it exists, otherwise it will return -1. If you want to return None, you can return -1 as done above. If you want to return None as a string, you can use if(lst.size()<2) return "None";.  // Note: This function will return the 2nd smallest element if it exists, otherwise it will return -1. If you want to return None, you can return -1 as done above. If you want to return None as a string, you can use if(lst.size()<2) return "None";.  // Note: This function will return the 2nd smallest element if it exists, otherwise it will return -1. If you want to return None, you can return -1 as done above. If you want to return None as a string, you can use if(lst.size()<2) return "None";.  // Note: This function will return the 2nd smallest element if it exists, otherwise it will return -1. If you want to return