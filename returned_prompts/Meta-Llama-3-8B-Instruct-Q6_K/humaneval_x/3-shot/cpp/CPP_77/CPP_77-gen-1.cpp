    int i;
    for (i=1;i<=sqrt(abs(a));i++)
    if (i*i*i == abs(a))
    return true;
    return false;
}  // Note: This is not the most efficient solution. We can do better by using the fact that the cube root of a perfect cube is an integer. So, we can use the function ceil() from math.h library. But I am keeping this solution for simplicity.  // Note: This is not the most efficient solution. We can do better by using the fact that the cube root of a perfect cube is an integer. So, we can use the function ceil() from math.h library. But I am keeping this solution for simplicity.  // Note: This is not the most efficient solution. We can do better by using the fact that the cube root of a perfect cube is an integer. So, we can use the function ceil() from math.h library. But I am keeping this solution for simplicity.  // Note: This is not the most efficient solution. We can do better by using the fact that the cube root of a perfect cube is an integer. So, we can use the function ceil() from math.h library. But I am keeping this solution for simplicity.  // Note: This is not the most efficient solution. We can do better by using the fact that the cube root of a perfect cube is an integer. So, we can use the function ceil() from math.h library. But I am keeping this solution for simplicity.  // Note: This is not the most efficient solution. We can do better by using the fact that the cube root of a perfect cube is an integer. So, we can use the function ceil() from math.h library. But I am keeping this solution for simplicity.  // Note: This is not the most efficient solution. We can do better by using the fact that the cube root of a perfect cube is an integer. So, we can use the function ceil() from math.h library. But I am keeping this solution for simplicity.  // Note: This is not the most efficient solution. We can do better by using the fact that the cube root of a perfect cube is an integer. So, we can use the function ceil() from math.h library. But I am keeping this solution for simplicity.  // Note: This is not the most efficient solution. We can do better by using the fact that the cube root of a perfect cube is an integer. So, we