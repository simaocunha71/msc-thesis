    int i;
    int cube=a;
    for (i=1;i<=a;i++)
    {
        if (pow(i,3)==cube)
        return true;
    }
    return false;
}  // This function checks all numbers from 1 to a and checks if the cube of that number is equal to a. If it is, then it returns true, else it returns false. This function has a time complexity of O(n) where n is the input number. This function might not be efficient for large inputs.  // This function checks all numbers from 1 to a and checks if the cube of that number is equal to a. If it is, then it returns true, else it returns false. This function has a time complexity of O(n) where n is the input number. This function might not be efficient for large inputs.  // This function checks all numbers from 1 to a and checks if the cube of that number is equal to a. If it is, then it returns true, else it returns false. This function has a time complexity of O(n) where n is the input number. This function might not be efficient for large inputs.  // This function checks all numbers from 1 to a and checks if the cube of that number is equal to a. If it is, then it returns true, else it returns false. This function has a time complexity of O(n) where n is the input number. This function might not be efficient for large inputs.  // This function checks all numbers from 1 to a and checks if the cube of that number is equal to a. If it is, then it returns true, else it returns false. This function has a time complexity of O(n) where n is the input number. This function might not be efficient for large inputs.  // This function checks all numbers from 1 to a and checks if the cube of that number is equal to a. If it is, then it returns true, else it returns false. This function has a time complexity of O(n) where n is the input number. This function might not be efficient for large inputs.  // This function checks all numbers from 1 to a and checks if the cube of that number is equal to a. If it is, then it returns true, else it returns false. This function has a time complexity of O(n) where n is the input number. This function might not be efficient for large inputs.  // This function checks all numbers