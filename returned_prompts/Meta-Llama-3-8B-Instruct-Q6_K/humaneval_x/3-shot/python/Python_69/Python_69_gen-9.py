    from collections import Counter

    counter = Counter(lst)
    max_num = max(lst)
    for num, freq in counter.items():
        if num > 0 and freq >= num:
            return num
    return -1
# This function works by first counting the frequency of each number in the list using the Counter class from the collections module. Then it iterates over the counted frequencies. If a number with frequency greater than or equal to itself is found, it is returned. If no such number is found, -1 is returned.  The max function is used to get the maximum number in the list.  The Counter class is a dictionary subclass for counting hashable objects.  It is a collection where elements are stored as dictionary keys and their counts are stored as dictionary values.  Counts are allowed to be any integer value including zero or negative counts.  The Counter class is a part of the Python Standard Library.  It is available in Python 2.7 and later.  It is also available in Python 3.x.  It is not available in Python 2.6 and earlier.  If you are using Python 2.6 or earlier, you can use the defaultdict class from the collections module to achieve similar functionality.  The defaultdict class is a dictionary subclass that calls a factory function to supply missing values.  It is also available in Python 2.7 and later.  It is also available in Python 3.x.  It is not available in Python 2.6 and earlier.  You can use the defaultdict class to create a dictionary where the values are initialized to a certain value.  You can use it to create a dictionary where the values are initialized to zero, for example.  The defaultdict class is a part of the Python Standard Library.  It is available in Python 2.7 and later.  It is also available in Python 3.x.  It is not available in Python 2.6 and earlier.  If you are using Python 2.6 or earlier, you can use a regular dictionary and manually set the values to zero.  You can use the dict class to create a dictionary.  The dict class is a part of the Python Standard Library.  It is available in Python 2.7 and later.  It is also available in Python 3.x.  It is not available in Python 2.6 and earlier.  You can use the dict class to create a dictionary where the values are initialized to a