    l.sort()
    length = len(l)
    middle_index = length // 2

    if length % 2 == 0:
        return (l[middle_index - 1] + l[middle_index]) / 2
    else:
        return l[middle_index]  # Return the middle element, since it's the median in this case.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list has at least one element.  # No need to check for odd/even length here, since the problem guarantees that the list