    eaten = number + (need - number if number < need else 0)
    left = remaining - (need - number if number < need else remaining)
    return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]  # return [eaten, left] if left >= 0 else [eaten + remaining, 0]