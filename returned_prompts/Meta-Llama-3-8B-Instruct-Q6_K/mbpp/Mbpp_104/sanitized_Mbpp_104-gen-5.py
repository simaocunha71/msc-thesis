def sort_sublists(lists):
  return [sorted(sublist) for sublist in lists]  # Python's built-in sorted function returns a new sorted list from the elements of any sequence. It can also be used as a sort key. It returns a new sorted list from the elements of any sequence. It can also be used as a sort key.  # We use a list comprehension to create a new list of sorted sublists. The sorted function is called on each sublist.  # The result is a new list of lists, where each sublist is sorted.  # This is equivalent to calling the sort method on each sublist, but is generally more efficient.  # If you want to sort the sublists in place (i.e., modify the original list), you would use the sort method instead.  # The sort method modifies the list in place, but it returns None.  # The result is a list of lists, where each sublist is sorted.  # This is equivalent to calling the sort method on each sublist, but is generally more efficient.  # If you want to sort the sublists in place (i.e., modify the original list), you would use the sort method instead.  # The sort method modifies the list in place, but it returns None.  # The result is a list of lists, where each sublist is sorted.  # This is equivalent to calling the sort method on each sublist, but is generally more efficient.  # If you want to sort the sublists in place (i.e., modify the original list), you would use the sort method instead.  # The sort method modifies the list in place, but it returns None.  # The result is a list of lists, where each sublist is sorted.  # This is equivalent to calling the sort method on each sublist, but is generally more efficient.  # If you want to sort the sublists in place (i.e., modify the original list), you would use the sort method instead.  # The sort method modifies the list in place, but it returns None.  # The result is a list of lists, where each sublist is sorted.  # This is equivalent to calling the sort method on each sublist, but is generally more efficient.  # If you want to sort the sublists in place (i.e., modify the original list), you would use the sort method instead.  # The sort method modifies the list in place, but it returns None.  # The result is a list of