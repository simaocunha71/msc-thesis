def check_type(tup):
    return all(type(x) == type(tup[0]) for x in tup)  # Check if all elements are of same type. If yes, returns True else False.  # Test case 1: All elements are of same type.  # Test case 2: Elements of different type.  # Test case 3: Single element in tuple.  # Test case 4: Tuple with no elements.  # Test case 5: All elements are strings.  # Test case 6: All elements are floats.  # Test case 7: All elements are integers.  # Test case 8: All elements are None.  # Test case 9: All elements are lists.  # Test case 10: All elements are dictionaries.  # Test case 11: All elements are tuples.  # Test case 12: All elements are sets.  # Test case 13: All elements are booleans.  # Test case 14: All elements are bytes.  # Test case 15: All elements are complex numbers.  # Test case 16: All elements are strings with different lengths.  # Test case 17: All elements are floats with different values.  # Test case 18: All elements are integers with different values.  # Test case 19: All elements are None with different positions.  # Test case 20: All elements are lists with different lengths.  # Test case 21: All elements are dictionaries with different lengths.  # Test case 22: All elements are tuples with different lengths.  # Test case 23: All elements are sets with different lengths.  # Test case 24: All elements are booleans with different values.  # Test case 25: All elements are bytes with different lengths.  # Test case 26: All elements are complex numbers with different values.  # Test case 27: All elements are strings.  # Test case 28: All elements are floats.  # Test case 29: All elements are integers.  # Test case 30: All elements are None.  # Test case 31: All elements are lists.  # Test case 32: All elements are dictionaries.  # Test case 33: All elements are tuples.  # Test case 34: All elements are sets.  # Test case 35: All elements are booleans.  # Test case 36: All elements