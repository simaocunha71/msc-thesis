```
def len_log(lst):
    return max(len(i) for i in lst)
```
The function takes a list of strings as input and returns the length of the longest string in the list. This is achieved by using the built-in max function with a generator expression that calculates the length of each string in the list. The max function returns the largest of these lengths, which is the length of the longest string.

For example, if we call the function with the list ["python","PHP","bigdata"], it will return 7, which is the length of the longest word "bigdata". 

The unit test `assert len_log(["python","PHP","bigdata"]) == 7` ensures that the function behaves correctly in this case.  If the function is implemented correctly, this test will pass.  If the function is not implemented correctly, this test will fail.  This helps to ensure that the function is working as expected.  It's a good practice to write unit tests for your functions to ensure they are working correctly.  This can help catch bugs and make your code more reliable.  It can also help to improve the overall quality of your code by making it more predictable and easier to maintain.  In this case, the unit test is a simple way to verify that the function is working correctly and returning the expected result.  If the function is not working correctly, the test will fail and you will know that the function needs to be fixed.  This can make it easier to debug and fix the function.  It's a good practice to write unit tests for your functions and to run them regularly to ensure that your code is working correctly.  This can help to improve the overall quality of your code and make it more reliable.  It can also help to improve the overall quality of your code by making it more predictable and easier to maintain.  It's a good practice to write unit tests for your functions and to run them regularly to ensure that your code is working correctly.  This can help to improve the overall quality of your code and make it more reliable.  It can also help to improve the overall quality of your code by making it more predictable and easier to maintain.  It's a good practice to write unit tests for your functions and to run them regularly to ensure that your code is working correctly.  This can help to improve the overall quality of your code and make it more reliable.  It can also help to improve the overall quality of your code by making it more predictable and