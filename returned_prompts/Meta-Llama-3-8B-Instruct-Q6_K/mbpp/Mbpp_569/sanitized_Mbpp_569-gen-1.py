from typing import List
def sort_sublists(list_of_lists: List[List[str]]) -> List[List[str]]:
    return [sorted(sublist) for sublist in list_of_lists]  # Use list comprehension with sorted() function to sort each sublist.  # Return the list of sorted sublists.  # Define the function.  # Test the function.  assert sort_sublists([['green', 'orange'], ['black', 'white'], ['white', 'black', 'orange']])==[['green', 'orange'], ['black', 'white'], ['black', 'orange', 'white']]  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists.  # Define the function.  # Test the function.  # Return the sorted list of sublists. 