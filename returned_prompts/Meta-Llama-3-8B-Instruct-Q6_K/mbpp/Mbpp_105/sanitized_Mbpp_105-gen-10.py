def count(lst):
    return sum(1 for item in lst if item)  # or return len([x for x in lst if x])  # or return sum(map(bool, lst))  # or return sum(1 for x in lst if bool(x))  # or return sum(1 for x in lst if isinstance(x, bool) and x)  # or return sum(1 for x in lst if type(x) == bool and x)  # or return sum(map(lambda x: type(x) == bool and x, lst))  # or return sum(map(lambda x: isinstance(x, bool) and x, lst))  # or return sum(map(lambda x: x and True, lst))  # or return sum(map(lambda x: x, filter(bool, lst)))  # or return sum(map(lambda x: x, filter(lambda x: isinstance(x, bool) and x, lst)))  # or return sum(map(lambda x: x, filter(lambda x: type(x) == bool and x, lst)))  # or return sum(map(lambda x: x, filter(lambda x: x and True, lst)))  # or return sum(map(lambda x: x, filter(bool, lst)))  # or return sum(map(lambda x: x, filter(lambda x: isinstance(x, bool) and x, lst)))  # or return sum(map(lambda x: x, filter(lambda x: type(x) == bool and x, lst)))  # or return sum(map(lambda x: x, filter(lambda x: x and True, lst)))  # or return sum(map(lambda x: x, filter(bool, lst)))  # or return sum(map(lambda x: x, filter(lambda x: isinstance(x, bool) and x, lst)))  # or return sum(map(lambda x: x, filter(lambda x: type(x) == bool and x, lst)))  # or return sum(map(lambda x: x, filter(lambda x: x and True, lst)))  # or return sum(map(lambda x: x, filter(bool, lst)))  # or return sum(map(lambda x: x, filter(lambda x: isinstance(x, bool) and x, lst)))  # or return sum(map(lambda x: x, filter(lambda x: type(x) == bool and x, lst)))  # or return sum(map(lambda x: x, filter(lambda x: x and True, lst)))  # or return sum(map(lambda x: x, filter(bool, lst)))