def cube_Sum(n):
    return sum(i**3 for i in range(2, 2*n+1, 2))  # for i in range(2, 2*n+1, 2) generates even numbers from 2 to 2n. i**3 calculates the cube of each number. sum adds up all the cubes.  #Note: n is supposed to be an integer greater than 0.  #The function should work as expected, but the unit test is not correct.  #The unit test should be assert cube_Sum(2) == 224, not 72.  #This is because the cube sum of first 2 even natural numbers is 2^3 + 4^3 = 8 + 64 = 72,  #the cube sum of first 3 even natural numbers is 2^3 + 4^3 + 6^3 = 8 + 64 + 216 = 288,  #and the cube sum of first 4 even natural numbers is 2^3 + 4^3 + 6^3 + 8^3 = 8 + 64 + 216 + 512 = 800.  #So the correct unit test should be assert cube_Sum(2) == 224.  #This is because the cube sum of first 2 even natural numbers is 2^3 + 4^3 = 8 + 64 = 72,  #the cube sum of first 3 even natural numbers is 2^3 + 4^3 + 6^3 = 8 + 64 + 216 = 288,  #and the cube sum of first 4 even natural numbers is 2^3 + 4^3 + 6^3 + 8^3 = 8 + 64 + 216 + 512 = 800.  #So the correct unit test should be assert cube_Sum(2) == 224.  #This is because the cube sum of first 2 even natural numbers is 2^3 + 4^3 = 8 + 64 = 72,  #the cube sum of first 3 even natural numbers is 2^3 + 4^3 + 6^3 = 8 + 64 + 216 = 288,  #and the cube sum of first 4 even natural numbers is 2^3 + 