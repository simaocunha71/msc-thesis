def check_element(lst, element):
    return all(x == element for x in lst)  # using the all() function to check if all elements in the list are equal to the given element. If all elements are equal, it returns True; otherwise, it returns False.  # For example, check_element(["green", "orange", "black", "white"],'blue')==False because not all elements in the list are equal to 'blue'.  # Similarly, check_element(['blue', 'blue', 'blue', 'blue'], 'blue')==True because all elements in the list are equal to 'blue'.  # The function is case-sensitive.  # Example 2: check_element([1,2,3,4,5], 5) returns False because not all elements in the list are equal to 5.  # Example 3: check_element(['apple', 'apple', 'apple'], 'apple') returns True because all elements in the list are equal to 'apple'.  # The function is case-sensitive.  # Example 4: check_element([True, True, True, True], True) returns True because all elements in the list are equal to True.  # Example 5: check_element([True, False, True, True], True) returns False because not all elements in the list are equal to True.  # Example 6: check_element([1, 2, 3, 4], 5) returns False because not all elements in the list are equal to 5.  # Example 7: check_element([1, 1, 1, 1], 1) returns True because all elements in the list are equal to 1.  # The function is case-sensitive.  # Example 8: check_element([True, True, True, True], True) returns True because all elements in the list are equal to True.  # Example 9: check_element([True, False, True, True], True) returns False because not all elements in the list are equal to True.  # Example 10: check_element([1, 2, 3, 4], 5) returns False because not all elements in the list are equal to 5.  # The function is case-sensitive.  # Example 11: check_element([1, 1, 1, 1], 1) returns True because all elements in the list are equal to 1.  # Example