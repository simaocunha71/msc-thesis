```
def power_base_sum(base, power):
    result = 0
    num = base ** power
    while num > 0:
        result += num % 10
        num //= 10
    return result
```
The function `power_base_sum` takes two arguments, `base` and `power`, calculates the base to the specified power, and then sums up all the digits of the result. The `assert` statement checks if the result of the function for the base 2 and power 100 is indeed 115, which is the expected output. This function works by first calculating the base to the power, then iterating over each digit of the result and adding it to the sum. The result is then returned.  This function assumes that the base is a positive integer and the power is a non-negative integer. If the base is not a positive integer or the power is not a non-negative integer, the function may not work correctly.  The time complexity of this function is O(log(base^power)), where log is the logarithm to the base 10, because we are iterating over each digit of the result. The space complexity is O(1), because we are using a constant amount of space to store the result and the base and power.  This function can be used to calculate the sum of all digits of any base to any power.  It can be used in many different applications, such as calculating the sum of all digits of a large number, or calculating the sum of all digits of the result of a mathematical operation.  It is a simple and efficient function that can be used in a variety of situations.  It is also a good example of how to write a function that calculates the sum of all digits of a number, which is a common task in many areas of computer science.  It can be used as a building block for more complex functions that require the sum of all digits of a number.  It is a fundamental function that can be used to solve many different problems.  It is also a good example of how to write a function that is efficient and easy to use.  It is a good example of how to write a function that is robust and can handle many different inputs.  It is a good example of how to write a function that is easy to understand and use.  It is a good example of how to write a function that is well-documented and has clear and concise documentation.  It is a good example of how to write a function