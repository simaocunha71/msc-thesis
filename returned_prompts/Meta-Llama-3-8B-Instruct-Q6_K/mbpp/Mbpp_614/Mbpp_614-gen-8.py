```
def cummulative_sum(tuples_list):
    return sum(sum(i) for i in tuples_list)
```  # This function works by summing up all the tuples in the list and then summing up the results.
```python
assert cummulative_sum([(1, 3), (5, 6, 7), (2, 6)]) == 30
``` 
```python
print(cummulative_sum([(1, 3), (5, 6, 7), (2, 6)]))
``` 
Output:
30
```
This function works by using a generator expression to sum up all the values in each tuple, and then summing up those results. The unit test `assert cummulative_sum([(1, 3), (5, 6, 7), (2, 6)]) == 30` ensures that the function is working correctly. The function can be further tested with different inputs to ensure its correctness.  # This function works by summing up all the tuples in the list and then summing up the results. 
```python
assert cummulative_sum([(1, 3), (5, 6, 7), (2, 6)]) == 30
``` 
```python
print(cummulative_sum([(1, 3), (5, 6, 7), (2, 6)]))
``` 
Output:
30
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python
```python