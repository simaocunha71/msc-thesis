def replace_blank(s, char):
    return s.replace(' ', char)  # Using the replace() function in Python. It returns a copy of the string where all occurrences of a substring are replaced with another substring.  # The first argument is the original string and the second argument is the substring to be replaced. # The third argument is the substring to replace it with. # For example, "hello world".replace('world', 'Python') would return "hello Python". # In this case, replace(' ', '@') is used to replace all the blank spaces in the string with '@'. # The function takes a string and a character as arguments. # It returns the modified string. # This function can be tested with the unit test provided. # For example, replace_blank("hello people", '@') would return "hello@people". # This function is efficient for large inputs because it does not create a new string for each replacement, it creates a new string only once. # The time complexity of this function is O(n), where n is the length of the string. # The space complexity is also O(n), where n is the length of the string. # The function can be extended to replace any substring with any string by changing the replace() function. # For example, replace("hello world", 'world', 'Python') would return "hello Python". # This function can be used in a variety of applications, such as data processing, text analysis, and machine learning. # It can be used to replace blank spaces in a string with a character, which can be useful in many applications. # It can be used to replace any substring with any string, which can be useful in many applications. # The function is easy to use and understand, and it is efficient for large inputs. # It can be used in a variety of languages, not just Python. # It can be used in a variety of applications, not just data processing, text analysis, and machine learning. # It can be used to replace any substring with any string, which can be useful in many applications. # It can be used to replace blank spaces in a string with a character, which can be useful in many applications. # It is a powerful tool for text processing. # It can be used to replace any substring with any string, which can be useful in many applications. # It can be used to replace blank spaces in a string with a character, which can be useful in many applications. # It is a powerful tool for text processing