You can use a list comprehension with the format function to achieve this. Here is a Python solution:

```Python
def add_string(lst, fmt):
    return [fmt.format(i) for i in lst]
```
This function takes a list `lst` and a format string `fmt` as input, and returns a new list where each element is the result of formatting the corresponding element in `lst` with `fmt`.

For example, if you call `add_string([1,2,3,4],'temp{0}')`, it will return `['temp1', 'temp2', 'temp3', 'temp4']`. The unit test `assert add_string([1,2,3,4],'temp{0}')==['temp1', 'temp2', 'temp3', 'temp4']` ensures that this function works as expected.  The `fmt.format(i)` expression replaces `{0}` in `fmt` with the string representation of `i`, and the result is a new string. The list comprehension then collects all these formatted strings into a new list.  This function is quite flexible, as it can handle any format string and any list of elements.  It can be used to add a prefix or suffix to all elements in a list, or to convert all elements to a specific format.  For example, you could use it to convert all elements in a list to strings, or to add a unit to all elements in a list of numbers.  The possibilities are endless!  Just remember that the format string must contain at least one `{}` placeholder, and that the elements in the list must be able to be converted to strings.  If the list contains elements that cannot be converted to strings, you will get an error.  But if you use this function wisely, it can be a very powerful tool in your programming toolkit.  For example, you could use it to create a list of strings, where each string is a formatted version of an element in a list.  You could use it to create a list of strings, where each string is the result of formatting an element in a list with a specific format string.  And so on.  The possibilities are endless!  Just remember to use it wisely, and you will be able to create all sorts of useful lists of strings.  For example, you could use it to create a list of strings, where each string is a formatted version of an element in a list.  You could use it to create a list