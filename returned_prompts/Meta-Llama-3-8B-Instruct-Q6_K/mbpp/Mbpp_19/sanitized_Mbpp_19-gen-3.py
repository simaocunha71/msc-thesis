def test_duplicate(lst):
    return len(lst) != len(set(lst))  # Check if the list and set have the same length. If they don't, it means there are duplicates.  # Return True if there are duplicates, False otherwise.  # Example usage: test_duplicate([1,2,3,4,5])  # Returns: False  # test_duplicate([1,2,3,4,4])  # Returns: True  # test_duplicate([1,1,2,2,3,3,4,4,5,5])  # Returns: True  # test_duplicate([1,2,3,4,5,6,7,8,9,10])  # Returns: False  # test_duplicate([1,1,1,1,1])  # Returns: True  # test_duplicate([1,2,3,4,5,6,7,8,9,10,11])  # Returns: False  # test_duplicate([1,1,1,1,1,1])  # Returns: True  # test_duplicate([1,2,3,4,5,6,7,8,9,10,11,12])  # Returns: False  # test_duplicate([1,1,1,1,1,1,1])  # Returns: True  # test_duplicate([1,1,1,1,1,1,1,1])  # Returns: True  # test_duplicate([1,1,1,1,1,1,1,1,1])  # Returns: True  # test_duplicate([1,1,1,1,1,1,1,1,1,1])  # Returns: True  # test_duplicate([1,2,3,4,5,6,7,8,9,10,11,12,13])  # Returns: False  # test_duplicate([1,1,1,1,1,1,1,1,1,1,1,1,1])  # Returns: True  # test_duplicate([1,2,3,4,5,6,7,8,9,10,11,12,13,14])  # Returns: False  # test_duplicate([1,1,1,1,1,1,1,1,1,1,1,1,1,1