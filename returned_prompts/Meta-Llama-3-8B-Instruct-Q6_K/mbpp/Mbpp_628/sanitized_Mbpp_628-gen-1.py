def replace_spaces(s):
    return s.replace(' ', '%20')  # Using the built-in replace method of Python strings
    # Alternatively, you can use the join method with a generator expression:
    # return '%20'.join(s.split(' '))  # This is more efficient for large strings.  # Time complexity: O(n) where n is the length of the string.  # Space complexity: O(n) where n is the length of the string.  # This function can be used with strings that contain any characters, not just alphanumeric characters.  # It does not handle encoding issues, if you are working with non-ASCII characters, you should use a proper encoding aware function.  # It does not handle Unicode characters, if you are working with Unicode characters, you should use a proper Unicode aware function.  # It does not handle non-string input, if you are working with non-string input, you should use a proper input validation function.  # It does not handle errors, if you are working with errors, you should use a proper error handling function.  # It does not handle concurrent access, if you are working with concurrent access, you should use a proper concurrent access handling function.  # It does not handle network access, if you are working with network access, you should use a proper network access handling function.  # It does not handle file access, if you are working with file access, you should use a proper file access handling function.  # It does not handle database access, if you are working with database access, you should use a proper database access handling function.  # It does not handle GUI access, if you are working with GUI access, you should use a proper GUI access handling function.  # It does not handle other types of access, if you are working with other types of access, you should use a proper access handling function.  # It does not handle other types of input, if you are working with other types of input, you should use a proper input handling function.  # It does not handle other types of output, if you are working with other types of output, you should use a proper output handling function.  # It does not handle other types of errors, if you are working with other types of errors, you should use a proper error handling function.  # It does not handle other types of data, if you are working with other types of data, you should use a proper data handling function.  # It does not