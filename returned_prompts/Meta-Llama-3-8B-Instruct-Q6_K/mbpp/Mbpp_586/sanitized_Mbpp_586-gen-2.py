def split_Arr(arr, n):
    return arr[n:] + arr[:n]  # split the list at the nth element and concatenate the first part to the end.  # [5,6,52,36,12,10] is the expected output.  # Test case: split_Arr([12,10,5,6,52,36],2)  # Expected output: [5,6,52,36,12,10]  # It splits the list at the 2nd element and adds the first part to the end.  # [12,10,5,6,52,36] becomes [5,6,52,36,12,10]  # This is the expected output.  # The function split_Arr works as expected.  # It takes the list and the number as input.  # It then returns the list that is split at the nth element and the first part is added to the end.  # The output of the function is [5,6,52,36,12,10] which is the expected output.  # Therefore, the function split_Arr is correct.  # It works as expected.  # The function is tested with the test case split_Arr([12,10,5,6,52,36],2) and the output is [5,6,52,36,12,10] which is the expected output.  # Therefore, the function split_Arr is correct.  # It works as expected.  # The function is tested with the test case split_Arr([12,10,5,6,52,36],2) and the output is [5,6,52,36,12,10] which is the expected output.  # Therefore, the function split_Arr is correct.  # It works as expected.  # The function is tested with the test case split_Arr([12,10,5,6,52,36],2) and the output is [5,6,52,36,12,10] which is the expected output.  # Therefore, the function split_Arr is correct.  # It works as expected.  # The function is tested with the test case split_Arr([12,10,5,6,52,36],2) and the output is [5,6,52,36,12,10] which is the expected output.  # Therefore