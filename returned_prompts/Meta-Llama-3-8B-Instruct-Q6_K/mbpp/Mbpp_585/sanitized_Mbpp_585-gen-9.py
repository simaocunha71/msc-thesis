from operator import itemgetter
def expensive_items(dataset, n):
  dataset.sort(key=itemgetter('price'), reverse=True)
  return dataset[:n]  # Return the n most expensive items. If n is greater than the length of the dataset, return the entire dataset. If n is less than or equal to 0, return an empty list.  # Check for edge cases.  # Return the n most expensive items. If n is greater than the length of the dataset, return the entire dataset. If n is less than or equal to 0, return an empty list.  # Check for edge cases.  # Return the n most expensive items. If n is greater than the length of the dataset, return the entire dataset. If n is less than or equal to 0, return an empty list.  # Check for edge cases.  return dataset[:n]  # Return the n most expensive items. If n is greater than the length of the dataset, return the entire dataset. If n is less than or equal to 0, return an empty list.  # Check for edge cases.  # Return the n most expensive items. If n is greater than the length of the dataset, return the entire dataset. If n is less than or equal to 0, return an empty list.  # Check for edge cases.  # Return the n most expensive items. If n is greater than the length of the dataset, return the entire dataset. If n is less than or equal to 0, return an empty list.  # Check for edge cases.  # Return the n most expensive items. If n is greater than the length of the dataset, return the entire dataset. If n is less than or equal to 0, return an empty list.  # Check for edge cases.  # Return the n most expensive items. If n is greater than the length of the dataset, return the entire dataset. If n is less than or equal to 0, return an empty list.  # Check for edge cases.  # Return the n most expensive items. If n is greater than the length of the dataset, return the entire dataset. If n is less than or equal to 0, return an empty list.  # Check for edge cases.  # Return the n most expensive items. If n is greater than the length of the dataset, return the entire dataset. If n is less than or equal to 0, return an empty list.  #