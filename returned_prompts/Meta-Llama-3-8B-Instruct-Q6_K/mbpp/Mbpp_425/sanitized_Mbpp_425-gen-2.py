def count_element_in_list(lst, element):
    return sum(1 for sublist in lst if element in sublist)  # or use a list comprehension: [1 for sublist in lst if element in sublist].count(1)  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use sum(map(lambda x: 1 if element in x else 0, lst))  # or use