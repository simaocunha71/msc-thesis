```
def pair_wise(lst):
    return [(x, y) for x, y in zip(lst, lst[1:])]
```
The provided unit test suggests that the function should return all pairs of consecutive items in the list. This can be achieved by using the `zip` function in Python, which takes two lists and pairs up their elements. The second list is generated by slicing the original list from the second element to the end.

The function uses a list comprehension to iterate over the pairs generated by `zip` and returns a list of these pairs.

For example, if the input list is `[1, 1, 2, 3, 3, 4, 4, 5]`, the function will return `[(1, 1), (1, 2), (2, 3), (3, 3), (3, 4), (4, 4), (4, 5)]`. This is because `zip` pairs up consecutive elements in the list, and the list comprehension converts these pairs into a list of tuples. The resulting list includes all pairs of consecutive items in the original list.