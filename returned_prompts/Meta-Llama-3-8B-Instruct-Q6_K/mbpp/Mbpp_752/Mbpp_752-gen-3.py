The Jacobsthal sequence is a sequence of numbers that is generated by the recurrence relation F(n) = F(n-1) + 1, where F(0) = 0 and F(1) = 1. The nth Jacobsthal number is the nth term in this sequence.

Here is a Python function that generates the nth Jacobsthal number:

```
def jacobsthal_num(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        jacobsthal_nums = [0, 1]
        while len(jacobsthal_nums) < n:
            jacobsthal_nums.append(jacobsthal_nums[-1] + 1)
        return jacobsthal_nums[-1]
```

This function first checks if n is 0 or 1, in which case it returns the corresponding value. If n is greater than 1, it generates the Jacobsthal sequence up to the nth term and returns the last term.

The unit test `assert jacobsthal_num(5) == 11` ensures that the function returns the correct value for the 5th Jacobsthal number. This test is used to verify that the function is working correctly. If the function is not working correctly, the test will fail, indicating that there is an error in the function.