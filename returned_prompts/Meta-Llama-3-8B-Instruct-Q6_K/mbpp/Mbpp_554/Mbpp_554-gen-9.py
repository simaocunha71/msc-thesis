```
def Split(lst):
    return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```
The function `Split` takes a list of integers as input and returns a new list that contains only the odd numbers from the original list. The function uses a list comprehension to iterate over the input list and includes each integer `i` in the output list if `i` is odd (i.e., `i % 2 != 0`). The resulting list is then returned. This function passes the given unit test.  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  # or return [i for i in lst if i % 2 != 0]
```  #