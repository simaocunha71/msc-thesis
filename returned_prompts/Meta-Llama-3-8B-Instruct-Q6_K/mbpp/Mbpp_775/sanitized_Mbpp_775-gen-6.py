def odd_position(lst):
    return all(lst[i] % 2 != 0 for i in range(1, len(lst), 2))  # Check every odd index for odd numbers.  # Return True if all odd numbers are present, else False.  # For the given test case, the function will return True as every odd index contains odd numbers.  # For example, for the list [2,1,4,3,6,7,6,3], the function will return True because indices 1 and 3 contain odd numbers.  # The function will return False if there are any even numbers on odd indices.  # For example, for the list [2,1,4,3,6,4,6,3], the function will return False because index 5 contains an even number.  # The function is case-insensitive and will work with lists of any size.  # It will also work with lists that contain negative numbers, not just positive numbers.  # For example, for the list [-2,1,-4,3,6,-7,6,3], the function will return True because indices 1 and 3 contain odd numbers.  # It will also work with lists that contain zero, not just positive numbers.  # For example, for the list [0,1,0,3,6,7,6,3], the function will return True because indices 1 and 3 contain odd numbers.  # It will also work with lists that contain duplicate values.  # For example, for the list [2,1,4,3,6,7,6,3,7], the function will return True because indices 1 and 3 contain odd numbers.  # It will also work with lists that contain a mix of positive and negative numbers.  # For example, for the list [2,1,-4,3,6,-7,6,3], the function will return True because indices 1 and 3 contain odd numbers.  # It will also work with lists that contain a mix of positive and negative numbers and zero.  # For example, for the list [0,1,-4,3,6,-7,6,3], the function will return True because indices 1 and 3 contain odd numbers.  # The function will return False if there are any even numbers on odd indices.  # For example, for the list [2,1,