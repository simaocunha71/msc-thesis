###PATH:./puzzle-master/puzzle.js
const isAlphanumeric = str => {
    return str.match(/^[a-zA-Z0-9]+$/) !== null;
}

const isPrime = num => {
    for(let i = 2, s = Math.sqrt(num); i <= s; i++) {
        if(num % i === 0) return false;
    }
    return num > 1;
}

const hasNumericSequence = str => {
    return str.match(/[0-9]+/) !== null;
}

const uniqueChars = str => {
    let unique = new Set(str);
    return unique.size;
}

function puzzleScore(str) {
    length = str.length;
    length_is_prime = isPrime(length);
    uppercase_count = 0;
    lowercase_count = 0;
    digit_count = 0;
    special_count = 0;
    vowel_count = 0;
    consonant_count = 0;
    has_whitespace = false;
    has_alphabet = false;

    for (let i = 0; i < length; i++) {
        if (str[i] >= 'A' && str[i] <= 'Z') uppercase_count++;
        if (str[i] >= 'a' && str[i] <= 'z') lowercase_count++;
        if (str[i] >= '0' && str[i] <= '9') digit_count++;
        if (!isAlphanumeric(str[i])) special_count++;
        if ((/^[aeiou]$/i).test(str[i])) vowel_count++;
        if ((/^[bcdfghjklmnpqrstvwxyz]$/i).test(str[i])) consonant_count++;
        if (str[i] === ' ') has_whitespace = true;
        if (str[i].match(/[a-z]/i)) has_alphabet = true;
    }
    has_uppercase = uppercase_count > 0 ? true : false;
    has_lowercase = lowercase_count > 0 ? true : false;
    has_digit = digit_count > 0 ? true : false;
    has_special = special_count > 0 ? true : false;
    has_vowel = vowel_count > 0 ? true : false;
    has_consonant = consonant_count > 0 ? true : false;
    is_palindrome = str === str.split("").reverse().join("");
    case_ratio = lowercase_count != 0 ? (uppercase_count / lowercase_count) : -1;
    numeric_sequence = hasNumericSequence(str);
   