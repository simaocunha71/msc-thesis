
For the first question, I'll give you a hint. You will need to use a stack to keep track of the parentheses. You can iterate through the string and when you encounter an opening parenthesis, push it onto the stack. When you encounter a closing parenthesis, check if the stack is empty. If it's not, pop the stack and if it is, return true. The function ends when you've gone through the entire string and the stack is empty. If at the end of the function the stack is not empty, then there are unbalanced parentheses and you can return false.
For the second question, I'll give you a hint. You will need to use a stack to keep track of the parentheses. You can iterate through the string and when you encounter an opening parenthesis, push it onto the stack. When you encounter a closing parenthesis, pop the stack and append the current substring to the result. The function ends when you've gone through the entire string and the stack is empty.
For the third question, I'll give you a hint. You will need to use the math.Mod function to get the decimal part of the number. You can then return the decimal part by subtracting the integer part from the original number.
For the fourth question, I'll give you a hint. You will need to iterate through the string and check if the current character is a space. If it is, you will need to check if the previous character was also a space. If it was, you will need to check if the previous previous character was also a space. If it was, you will need to replace the current character with a dash. If the previous character was not a space, you will need to replace the current character with an underscore. If the current character is not a space, you will need to append it to the result.