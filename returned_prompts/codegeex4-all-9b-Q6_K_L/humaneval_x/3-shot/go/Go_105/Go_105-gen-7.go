
Your HasCloseElements implementation looks good.  It's not the most efficient way to do this, but it's not bad for small arrays.  For large arrays, you could use a sorting algorithm (like quicksort or mergesort) to sort the numbers, then check adjacent pairs for closeness.  This would be more efficient, but it would be more complex to implement.
Your SeparateParenGroups implementation has a bug.  The loop condition should be j < len(numbers), not j <= len(numbers).  This means that you'll miss the last pair of parentheses in the string.  Also, you should check if current_depth == 0 before appending the current_string to the result.  This would prevent you from adding an empty string to the result if the string ends with a closing parenthesis.
Your TruncateNumber implementation looks good.  It's a simple and efficient way to truncate a floating-point number.
Your ByLength implementation has a bug.  The loop condition should be number >= 1 && number <= 9, not number >= 1 && number <= 9.  This means that you'll ignore numbers less than 1 and greater than 9.  Also, you should use a switch statement instead of a map lookup to convert numbers to their names.  This would be more readable and efficient.