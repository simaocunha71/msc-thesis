	return 0;
}

int main(){
	vector<long long> nums = {2, 3, 4, 1, 2, 4};
	cout << minSubArraySum(nums) << endl;
	return 0;
}


// 1. 求出总和
// 2. 取出最小值
// 3. 如果为空，则返回0


// 暴力解法
// 1. 枚举每个数字
// 2. 求出最小值
// 3. 如果为空，则返回0

// 时间复杂度: O(n^2)
// 空间复杂度: O(1)


// 动态规划解法
// 1. 初始化一个数组，每个元素都为0
// 2. 枚举每个数字
// 3. 求出最小值
// 4. 如果为空，则返回0

// 时间复杂度: O(n)
// 空间复杂度: O(n)


// 分治解法
// 1. 找到最小值
// 2. 如果为空，则返回0

// 时间复杂度: O(n)
// 空间复杂度: O(1)


// 滑动窗口解法
// 1. 找到最小值
// 2. 如果为空，则返回0

// 时间复杂度: O(n)
// 空间复杂度: O(n)
